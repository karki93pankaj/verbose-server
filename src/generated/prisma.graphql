type AggregateAlertBox {
  count: Int!
}

type AggregateBlock {
  count: Int!
}

type AggregateBox {
  count: Int!
}

type AggregateComponent {
  count: Int!
}

type AggregateCons {
  count: Int!
}

type AggregateFaq {
  count: Int!
}

type AggregateFaqCategory {
  count: Int!
}

type AggregateGrid {
  count: Int!
}

type AggregateGridItem {
  count: Int!
}

type AggregateMedia {
  count: Int!
}

type AggregatePage {
  count: Int!
}

type AggregatePageFaq {
  count: Int!
}

type AggregatePageFaqAccordion {
  count: Int!
}

type AggregatePros {
  count: Int!
}

type AggregateProsAndCons {
  count: Int!
}

type AggregateQuickTip {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AlertBox {
  id: ID!
  page: Page!
  title: String
  content: String
  prefix: String
  style: String
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AlertBoxConnection {
  pageInfo: PageInfo!
  edges: [AlertBoxEdge]!
  aggregate: AggregateAlertBox!
}

input AlertBoxCreateInput {
  id: ID
  page: PageCreateOneWithoutAlertBoxesInput!
  title: String
  content: String
  prefix: String
  style: String
  top: Boolean
  order: Int
}

input AlertBoxCreateManyWithoutPageInput {
  create: [AlertBoxCreateWithoutPageInput!]
  connect: [AlertBoxWhereUniqueInput!]
}

input AlertBoxCreateWithoutPageInput {
  id: ID
  title: String
  content: String
  prefix: String
  style: String
  top: Boolean
  order: Int
}

type AlertBoxEdge {
  node: AlertBox!
  cursor: String!
}

enum AlertBoxOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  prefix_ASC
  prefix_DESC
  style_ASC
  style_DESC
  top_ASC
  top_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AlertBoxPreviousValues {
  id: ID!
  title: String
  content: String
  prefix: String
  style: String
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AlertBoxScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  prefix: String
  prefix_not: String
  prefix_in: [String!]
  prefix_not_in: [String!]
  prefix_lt: String
  prefix_lte: String
  prefix_gt: String
  prefix_gte: String
  prefix_contains: String
  prefix_not_contains: String
  prefix_starts_with: String
  prefix_not_starts_with: String
  prefix_ends_with: String
  prefix_not_ends_with: String
  style: String
  style_not: String
  style_in: [String!]
  style_not_in: [String!]
  style_lt: String
  style_lte: String
  style_gt: String
  style_gte: String
  style_contains: String
  style_not_contains: String
  style_starts_with: String
  style_not_starts_with: String
  style_ends_with: String
  style_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [AlertBoxScalarWhereInput!]
  OR: [AlertBoxScalarWhereInput!]
  NOT: [AlertBoxScalarWhereInput!]
}

type AlertBoxSubscriptionPayload {
  mutation: MutationType!
  node: AlertBox
  updatedFields: [String!]
  previousValues: AlertBoxPreviousValues
}

input AlertBoxSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: AlertBoxWhereInput
  AND: [AlertBoxSubscriptionWhereInput!]
  OR: [AlertBoxSubscriptionWhereInput!]
  NOT: [AlertBoxSubscriptionWhereInput!]
}

input AlertBoxUpdateInput {
  page: PageUpdateOneRequiredWithoutAlertBoxesInput
  title: String
  content: String
  prefix: String
  style: String
  top: Boolean
  order: Int
}

input AlertBoxUpdateManyDataInput {
  title: String
  content: String
  prefix: String
  style: String
  top: Boolean
  order: Int
}

input AlertBoxUpdateManyMutationInput {
  title: String
  content: String
  prefix: String
  style: String
  top: Boolean
  order: Int
}

input AlertBoxUpdateManyWithoutPageInput {
  create: [AlertBoxCreateWithoutPageInput!]
  delete: [AlertBoxWhereUniqueInput!]
  connect: [AlertBoxWhereUniqueInput!]
  set: [AlertBoxWhereUniqueInput!]
  disconnect: [AlertBoxWhereUniqueInput!]
  update: [AlertBoxUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [AlertBoxUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [AlertBoxScalarWhereInput!]
  updateMany: [AlertBoxUpdateManyWithWhereNestedInput!]
}

input AlertBoxUpdateManyWithWhereNestedInput {
  where: AlertBoxScalarWhereInput!
  data: AlertBoxUpdateManyDataInput!
}

input AlertBoxUpdateWithoutPageDataInput {
  title: String
  content: String
  prefix: String
  style: String
  top: Boolean
  order: Int
}

input AlertBoxUpdateWithWhereUniqueWithoutPageInput {
  where: AlertBoxWhereUniqueInput!
  data: AlertBoxUpdateWithoutPageDataInput!
}

input AlertBoxUpsertWithWhereUniqueWithoutPageInput {
  where: AlertBoxWhereUniqueInput!
  update: AlertBoxUpdateWithoutPageDataInput!
  create: AlertBoxCreateWithoutPageInput!
}

input AlertBoxWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  page: PageWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  prefix: String
  prefix_not: String
  prefix_in: [String!]
  prefix_not_in: [String!]
  prefix_lt: String
  prefix_lte: String
  prefix_gt: String
  prefix_gte: String
  prefix_contains: String
  prefix_not_contains: String
  prefix_starts_with: String
  prefix_not_starts_with: String
  prefix_ends_with: String
  prefix_not_ends_with: String
  style: String
  style_not: String
  style_in: [String!]
  style_not_in: [String!]
  style_lt: String
  style_lte: String
  style_gt: String
  style_gte: String
  style_contains: String
  style_not_contains: String
  style_starts_with: String
  style_not_starts_with: String
  style_ends_with: String
  style_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [AlertBoxWhereInput!]
  OR: [AlertBoxWhereInput!]
  NOT: [AlertBoxWhereInput!]
}

input AlertBoxWhereUniqueInput {
  id: ID
}

type BatchPayload {
  count: Long!
}

type Block {
  id: ID!
  page: Page!
  title: String
  media: Media
  video: String
  alignment: String
  content: String
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BlockConnection {
  pageInfo: PageInfo!
  edges: [BlockEdge]!
  aggregate: AggregateBlock!
}

input BlockCreateInput {
  id: ID
  page: PageCreateOneWithoutBlocksInput!
  title: String
  media: MediaCreateOneInput
  video: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BlockCreateManyWithoutPageInput {
  create: [BlockCreateWithoutPageInput!]
  connect: [BlockWhereUniqueInput!]
}

input BlockCreateWithoutPageInput {
  id: ID
  title: String
  media: MediaCreateOneInput
  video: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

type BlockEdge {
  node: Block!
  cursor: String!
}

enum BlockOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  video_ASC
  video_DESC
  alignment_ASC
  alignment_DESC
  content_ASC
  content_DESC
  top_ASC
  top_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type BlockPreviousValues {
  id: ID!
  title: String
  video: String
  alignment: String
  content: String
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input BlockScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  video: String
  video_not: String
  video_in: [String!]
  video_not_in: [String!]
  video_lt: String
  video_lte: String
  video_gt: String
  video_gte: String
  video_contains: String
  video_not_contains: String
  video_starts_with: String
  video_not_starts_with: String
  video_ends_with: String
  video_not_ends_with: String
  alignment: String
  alignment_not: String
  alignment_in: [String!]
  alignment_not_in: [String!]
  alignment_lt: String
  alignment_lte: String
  alignment_gt: String
  alignment_gte: String
  alignment_contains: String
  alignment_not_contains: String
  alignment_starts_with: String
  alignment_not_starts_with: String
  alignment_ends_with: String
  alignment_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [BlockScalarWhereInput!]
  OR: [BlockScalarWhereInput!]
  NOT: [BlockScalarWhereInput!]
}

type BlockSubscriptionPayload {
  mutation: MutationType!
  node: Block
  updatedFields: [String!]
  previousValues: BlockPreviousValues
}

input BlockSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BlockWhereInput
  AND: [BlockSubscriptionWhereInput!]
  OR: [BlockSubscriptionWhereInput!]
  NOT: [BlockSubscriptionWhereInput!]
}

input BlockUpdateInput {
  page: PageUpdateOneRequiredWithoutBlocksInput
  title: String
  media: MediaUpdateOneInput
  video: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BlockUpdateManyDataInput {
  title: String
  video: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BlockUpdateManyMutationInput {
  title: String
  video: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BlockUpdateManyWithoutPageInput {
  create: [BlockCreateWithoutPageInput!]
  delete: [BlockWhereUniqueInput!]
  connect: [BlockWhereUniqueInput!]
  set: [BlockWhereUniqueInput!]
  disconnect: [BlockWhereUniqueInput!]
  update: [BlockUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [BlockUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [BlockScalarWhereInput!]
  updateMany: [BlockUpdateManyWithWhereNestedInput!]
}

input BlockUpdateManyWithWhereNestedInput {
  where: BlockScalarWhereInput!
  data: BlockUpdateManyDataInput!
}

input BlockUpdateWithoutPageDataInput {
  title: String
  media: MediaUpdateOneInput
  video: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BlockUpdateWithWhereUniqueWithoutPageInput {
  where: BlockWhereUniqueInput!
  data: BlockUpdateWithoutPageDataInput!
}

input BlockUpsertWithWhereUniqueWithoutPageInput {
  where: BlockWhereUniqueInput!
  update: BlockUpdateWithoutPageDataInput!
  create: BlockCreateWithoutPageInput!
}

input BlockWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  page: PageWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  media: MediaWhereInput
  video: String
  video_not: String
  video_in: [String!]
  video_not_in: [String!]
  video_lt: String
  video_lte: String
  video_gt: String
  video_gte: String
  video_contains: String
  video_not_contains: String
  video_starts_with: String
  video_not_starts_with: String
  video_ends_with: String
  video_not_ends_with: String
  alignment: String
  alignment_not: String
  alignment_in: [String!]
  alignment_not_in: [String!]
  alignment_lt: String
  alignment_lte: String
  alignment_gt: String
  alignment_gte: String
  alignment_contains: String
  alignment_not_contains: String
  alignment_starts_with: String
  alignment_not_starts_with: String
  alignment_ends_with: String
  alignment_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [BlockWhereInput!]
  OR: [BlockWhereInput!]
  NOT: [BlockWhereInput!]
}

input BlockWhereUniqueInput {
  id: ID
}

type Box {
  id: ID!
  page: Page!
  title: String
  media: Media
  video: String
  style: String
  alignment: String
  content: String
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BoxConnection {
  pageInfo: PageInfo!
  edges: [BoxEdge]!
  aggregate: AggregateBox!
}

input BoxCreateInput {
  id: ID
  page: PageCreateOneWithoutBoxesInput!
  title: String
  media: MediaCreateOneInput
  video: String
  style: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BoxCreateManyWithoutPageInput {
  create: [BoxCreateWithoutPageInput!]
  connect: [BoxWhereUniqueInput!]
}

input BoxCreateWithoutPageInput {
  id: ID
  title: String
  media: MediaCreateOneInput
  video: String
  style: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

type BoxEdge {
  node: Box!
  cursor: String!
}

enum BoxOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  video_ASC
  video_DESC
  style_ASC
  style_DESC
  alignment_ASC
  alignment_DESC
  content_ASC
  content_DESC
  top_ASC
  top_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type BoxPreviousValues {
  id: ID!
  title: String
  video: String
  style: String
  alignment: String
  content: String
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input BoxScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  video: String
  video_not: String
  video_in: [String!]
  video_not_in: [String!]
  video_lt: String
  video_lte: String
  video_gt: String
  video_gte: String
  video_contains: String
  video_not_contains: String
  video_starts_with: String
  video_not_starts_with: String
  video_ends_with: String
  video_not_ends_with: String
  style: String
  style_not: String
  style_in: [String!]
  style_not_in: [String!]
  style_lt: String
  style_lte: String
  style_gt: String
  style_gte: String
  style_contains: String
  style_not_contains: String
  style_starts_with: String
  style_not_starts_with: String
  style_ends_with: String
  style_not_ends_with: String
  alignment: String
  alignment_not: String
  alignment_in: [String!]
  alignment_not_in: [String!]
  alignment_lt: String
  alignment_lte: String
  alignment_gt: String
  alignment_gte: String
  alignment_contains: String
  alignment_not_contains: String
  alignment_starts_with: String
  alignment_not_starts_with: String
  alignment_ends_with: String
  alignment_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [BoxScalarWhereInput!]
  OR: [BoxScalarWhereInput!]
  NOT: [BoxScalarWhereInput!]
}

type BoxSubscriptionPayload {
  mutation: MutationType!
  node: Box
  updatedFields: [String!]
  previousValues: BoxPreviousValues
}

input BoxSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: BoxWhereInput
  AND: [BoxSubscriptionWhereInput!]
  OR: [BoxSubscriptionWhereInput!]
  NOT: [BoxSubscriptionWhereInput!]
}

input BoxUpdateInput {
  page: PageUpdateOneRequiredWithoutBoxesInput
  title: String
  media: MediaUpdateOneInput
  video: String
  style: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BoxUpdateManyDataInput {
  title: String
  video: String
  style: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BoxUpdateManyMutationInput {
  title: String
  video: String
  style: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BoxUpdateManyWithoutPageInput {
  create: [BoxCreateWithoutPageInput!]
  delete: [BoxWhereUniqueInput!]
  connect: [BoxWhereUniqueInput!]
  set: [BoxWhereUniqueInput!]
  disconnect: [BoxWhereUniqueInput!]
  update: [BoxUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [BoxUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [BoxScalarWhereInput!]
  updateMany: [BoxUpdateManyWithWhereNestedInput!]
}

input BoxUpdateManyWithWhereNestedInput {
  where: BoxScalarWhereInput!
  data: BoxUpdateManyDataInput!
}

input BoxUpdateWithoutPageDataInput {
  title: String
  media: MediaUpdateOneInput
  video: String
  style: String
  alignment: String
  content: String
  top: Boolean
  order: Int
}

input BoxUpdateWithWhereUniqueWithoutPageInput {
  where: BoxWhereUniqueInput!
  data: BoxUpdateWithoutPageDataInput!
}

input BoxUpsertWithWhereUniqueWithoutPageInput {
  where: BoxWhereUniqueInput!
  update: BoxUpdateWithoutPageDataInput!
  create: BoxCreateWithoutPageInput!
}

input BoxWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  page: PageWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  media: MediaWhereInput
  video: String
  video_not: String
  video_in: [String!]
  video_not_in: [String!]
  video_lt: String
  video_lte: String
  video_gt: String
  video_gte: String
  video_contains: String
  video_not_contains: String
  video_starts_with: String
  video_not_starts_with: String
  video_ends_with: String
  video_not_ends_with: String
  style: String
  style_not: String
  style_in: [String!]
  style_not_in: [String!]
  style_lt: String
  style_lte: String
  style_gt: String
  style_gte: String
  style_contains: String
  style_not_contains: String
  style_starts_with: String
  style_not_starts_with: String
  style_ends_with: String
  style_not_ends_with: String
  alignment: String
  alignment_not: String
  alignment_in: [String!]
  alignment_not_in: [String!]
  alignment_lt: String
  alignment_lte: String
  alignment_gt: String
  alignment_gte: String
  alignment_contains: String
  alignment_not_contains: String
  alignment_starts_with: String
  alignment_not_starts_with: String
  alignment_ends_with: String
  alignment_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [BoxWhereInput!]
  OR: [BoxWhereInput!]
  NOT: [BoxWhereInput!]
}

input BoxWhereUniqueInput {
  id: ID
}

type Component {
  id: ID!
  page: Page!
  component: String
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ComponentConnection {
  pageInfo: PageInfo!
  edges: [ComponentEdge]!
  aggregate: AggregateComponent!
}

input ComponentCreateInput {
  id: ID
  page: PageCreateOneWithoutComponentsInput!
  component: String
  order: Int
}

input ComponentCreateManyWithoutPageInput {
  create: [ComponentCreateWithoutPageInput!]
  connect: [ComponentWhereUniqueInput!]
}

input ComponentCreateWithoutPageInput {
  id: ID
  component: String
  order: Int
}

type ComponentEdge {
  node: Component!
  cursor: String!
}

enum ComponentOrderByInput {
  id_ASC
  id_DESC
  component_ASC
  component_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ComponentPreviousValues {
  id: ID!
  component: String
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ComponentScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  component: String
  component_not: String
  component_in: [String!]
  component_not_in: [String!]
  component_lt: String
  component_lte: String
  component_gt: String
  component_gte: String
  component_contains: String
  component_not_contains: String
  component_starts_with: String
  component_not_starts_with: String
  component_ends_with: String
  component_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ComponentScalarWhereInput!]
  OR: [ComponentScalarWhereInput!]
  NOT: [ComponentScalarWhereInput!]
}

type ComponentSubscriptionPayload {
  mutation: MutationType!
  node: Component
  updatedFields: [String!]
  previousValues: ComponentPreviousValues
}

input ComponentSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ComponentWhereInput
  AND: [ComponentSubscriptionWhereInput!]
  OR: [ComponentSubscriptionWhereInput!]
  NOT: [ComponentSubscriptionWhereInput!]
}

input ComponentUpdateInput {
  page: PageUpdateOneRequiredWithoutComponentsInput
  component: String
  order: Int
}

input ComponentUpdateManyDataInput {
  component: String
  order: Int
}

input ComponentUpdateManyMutationInput {
  component: String
  order: Int
}

input ComponentUpdateManyWithoutPageInput {
  create: [ComponentCreateWithoutPageInput!]
  delete: [ComponentWhereUniqueInput!]
  connect: [ComponentWhereUniqueInput!]
  set: [ComponentWhereUniqueInput!]
  disconnect: [ComponentWhereUniqueInput!]
  update: [ComponentUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [ComponentUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [ComponentScalarWhereInput!]
  updateMany: [ComponentUpdateManyWithWhereNestedInput!]
}

input ComponentUpdateManyWithWhereNestedInput {
  where: ComponentScalarWhereInput!
  data: ComponentUpdateManyDataInput!
}

input ComponentUpdateWithoutPageDataInput {
  component: String
  order: Int
}

input ComponentUpdateWithWhereUniqueWithoutPageInput {
  where: ComponentWhereUniqueInput!
  data: ComponentUpdateWithoutPageDataInput!
}

input ComponentUpsertWithWhereUniqueWithoutPageInput {
  where: ComponentWhereUniqueInput!
  update: ComponentUpdateWithoutPageDataInput!
  create: ComponentCreateWithoutPageInput!
}

input ComponentWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  page: PageWhereInput
  component: String
  component_not: String
  component_in: [String!]
  component_not_in: [String!]
  component_lt: String
  component_lte: String
  component_gt: String
  component_gte: String
  component_contains: String
  component_not_contains: String
  component_starts_with: String
  component_not_starts_with: String
  component_ends_with: String
  component_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ComponentWhereInput!]
  OR: [ComponentWhereInput!]
  NOT: [ComponentWhereInput!]
}

input ComponentWhereUniqueInput {
  id: ID
}

type Cons {
  id: ID!
  prosAndCons: ProsAndCons!
  content: String
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ConsConnection {
  pageInfo: PageInfo!
  edges: [ConsEdge]!
  aggregate: AggregateCons!
}

input ConsCreateInput {
  id: ID
  prosAndCons: ProsAndConsCreateOneWithoutConsInput!
  content: String
  order: Int
}

input ConsCreateManyWithoutProsAndConsInput {
  create: [ConsCreateWithoutProsAndConsInput!]
  connect: [ConsWhereUniqueInput!]
}

input ConsCreateWithoutProsAndConsInput {
  id: ID
  content: String
  order: Int
}

type ConsEdge {
  node: Cons!
  cursor: String!
}

enum ConsOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ConsPreviousValues {
  id: ID!
  content: String
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ConsScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ConsScalarWhereInput!]
  OR: [ConsScalarWhereInput!]
  NOT: [ConsScalarWhereInput!]
}

type ConsSubscriptionPayload {
  mutation: MutationType!
  node: Cons
  updatedFields: [String!]
  previousValues: ConsPreviousValues
}

input ConsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ConsWhereInput
  AND: [ConsSubscriptionWhereInput!]
  OR: [ConsSubscriptionWhereInput!]
  NOT: [ConsSubscriptionWhereInput!]
}

input ConsUpdateInput {
  prosAndCons: ProsAndConsUpdateOneRequiredWithoutConsInput
  content: String
  order: Int
}

input ConsUpdateManyDataInput {
  content: String
  order: Int
}

input ConsUpdateManyMutationInput {
  content: String
  order: Int
}

input ConsUpdateManyWithoutProsAndConsInput {
  create: [ConsCreateWithoutProsAndConsInput!]
  delete: [ConsWhereUniqueInput!]
  connect: [ConsWhereUniqueInput!]
  set: [ConsWhereUniqueInput!]
  disconnect: [ConsWhereUniqueInput!]
  update: [ConsUpdateWithWhereUniqueWithoutProsAndConsInput!]
  upsert: [ConsUpsertWithWhereUniqueWithoutProsAndConsInput!]
  deleteMany: [ConsScalarWhereInput!]
  updateMany: [ConsUpdateManyWithWhereNestedInput!]
}

input ConsUpdateManyWithWhereNestedInput {
  where: ConsScalarWhereInput!
  data: ConsUpdateManyDataInput!
}

input ConsUpdateWithoutProsAndConsDataInput {
  content: String
  order: Int
}

input ConsUpdateWithWhereUniqueWithoutProsAndConsInput {
  where: ConsWhereUniqueInput!
  data: ConsUpdateWithoutProsAndConsDataInput!
}

input ConsUpsertWithWhereUniqueWithoutProsAndConsInput {
  where: ConsWhereUniqueInput!
  update: ConsUpdateWithoutProsAndConsDataInput!
  create: ConsCreateWithoutProsAndConsInput!
}

input ConsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  prosAndCons: ProsAndConsWhereInput
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ConsWhereInput!]
  OR: [ConsWhereInput!]
  NOT: [ConsWhereInput!]
}

input ConsWhereUniqueInput {
  id: ID
}

scalar DateTime

type Faq {
  id: ID!
  title: String!
  description: String
  short_description: String
  authors(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  slug: String!
  vertical: String
  category(where: FaqCategoryWhereInput, orderBy: FaqCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FaqCategory!]
  readingTime: Int
  order: Int
  variant: [String!]!
  tag: [String!]!
  pubDate: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type FaqCategory {
  id: ID!
  name: String!
  slug: String!
  description: String!
  faqs(where: FaqWhereInput, orderBy: FaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Faq!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type FaqCategoryConnection {
  pageInfo: PageInfo!
  edges: [FaqCategoryEdge]!
  aggregate: AggregateFaqCategory!
}

input FaqCategoryCreateInput {
  id: ID
  name: String!
  slug: String!
  description: String!
  faqs: FaqCreateManyWithoutCategoryInput
}

input FaqCategoryCreateManyWithoutFaqsInput {
  create: [FaqCategoryCreateWithoutFaqsInput!]
  connect: [FaqCategoryWhereUniqueInput!]
}

input FaqCategoryCreateOneInput {
  create: FaqCategoryCreateInput
  connect: FaqCategoryWhereUniqueInput
}

input FaqCategoryCreateWithoutFaqsInput {
  id: ID
  name: String!
  slug: String!
  description: String!
}

type FaqCategoryEdge {
  node: FaqCategory!
  cursor: String!
}

enum FaqCategoryOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  slug_ASC
  slug_DESC
  description_ASC
  description_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type FaqCategoryPreviousValues {
  id: ID!
  name: String!
  slug: String!
  description: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input FaqCategoryScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [FaqCategoryScalarWhereInput!]
  OR: [FaqCategoryScalarWhereInput!]
  NOT: [FaqCategoryScalarWhereInput!]
}

type FaqCategorySubscriptionPayload {
  mutation: MutationType!
  node: FaqCategory
  updatedFields: [String!]
  previousValues: FaqCategoryPreviousValues
}

input FaqCategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FaqCategoryWhereInput
  AND: [FaqCategorySubscriptionWhereInput!]
  OR: [FaqCategorySubscriptionWhereInput!]
  NOT: [FaqCategorySubscriptionWhereInput!]
}

input FaqCategoryUpdateDataInput {
  name: String
  slug: String
  description: String
  faqs: FaqUpdateManyWithoutCategoryInput
}

input FaqCategoryUpdateInput {
  name: String
  slug: String
  description: String
  faqs: FaqUpdateManyWithoutCategoryInput
}

input FaqCategoryUpdateManyDataInput {
  name: String
  slug: String
  description: String
}

input FaqCategoryUpdateManyMutationInput {
  name: String
  slug: String
  description: String
}

input FaqCategoryUpdateManyWithoutFaqsInput {
  create: [FaqCategoryCreateWithoutFaqsInput!]
  delete: [FaqCategoryWhereUniqueInput!]
  connect: [FaqCategoryWhereUniqueInput!]
  set: [FaqCategoryWhereUniqueInput!]
  disconnect: [FaqCategoryWhereUniqueInput!]
  update: [FaqCategoryUpdateWithWhereUniqueWithoutFaqsInput!]
  upsert: [FaqCategoryUpsertWithWhereUniqueWithoutFaqsInput!]
  deleteMany: [FaqCategoryScalarWhereInput!]
  updateMany: [FaqCategoryUpdateManyWithWhereNestedInput!]
}

input FaqCategoryUpdateManyWithWhereNestedInput {
  where: FaqCategoryScalarWhereInput!
  data: FaqCategoryUpdateManyDataInput!
}

input FaqCategoryUpdateOneRequiredInput {
  create: FaqCategoryCreateInput
  update: FaqCategoryUpdateDataInput
  upsert: FaqCategoryUpsertNestedInput
  connect: FaqCategoryWhereUniqueInput
}

input FaqCategoryUpdateWithoutFaqsDataInput {
  name: String
  slug: String
  description: String
}

input FaqCategoryUpdateWithWhereUniqueWithoutFaqsInput {
  where: FaqCategoryWhereUniqueInput!
  data: FaqCategoryUpdateWithoutFaqsDataInput!
}

input FaqCategoryUpsertNestedInput {
  update: FaqCategoryUpdateDataInput!
  create: FaqCategoryCreateInput!
}

input FaqCategoryUpsertWithWhereUniqueWithoutFaqsInput {
  where: FaqCategoryWhereUniqueInput!
  update: FaqCategoryUpdateWithoutFaqsDataInput!
  create: FaqCategoryCreateWithoutFaqsInput!
}

input FaqCategoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  faqs_every: FaqWhereInput
  faqs_some: FaqWhereInput
  faqs_none: FaqWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [FaqCategoryWhereInput!]
  OR: [FaqCategoryWhereInput!]
  NOT: [FaqCategoryWhereInput!]
}

input FaqCategoryWhereUniqueInput {
  id: ID
}

type FaqConnection {
  pageInfo: PageInfo!
  edges: [FaqEdge]!
  aggregate: AggregateFaq!
}

input FaqCreateInput {
  id: ID
  title: String!
  description: String
  short_description: String
  authors: UserCreateManyInput
  slug: String!
  vertical: String
  category: FaqCategoryCreateManyWithoutFaqsInput
  readingTime: Int
  order: Int
  variant: FaqCreatevariantInput
  tag: FaqCreatetagInput
  pubDate: DateTime
}

input FaqCreateManyWithoutCategoryInput {
  create: [FaqCreateWithoutCategoryInput!]
  connect: [FaqWhereUniqueInput!]
}

input FaqCreateOneInput {
  create: FaqCreateInput
  connect: FaqWhereUniqueInput
}

input FaqCreatetagInput {
  set: [String!]
}

input FaqCreatevariantInput {
  set: [String!]
}

input FaqCreateWithoutCategoryInput {
  id: ID
  title: String!
  description: String
  short_description: String
  authors: UserCreateManyInput
  slug: String!
  vertical: String
  readingTime: Int
  order: Int
  variant: FaqCreatevariantInput
  tag: FaqCreatetagInput
  pubDate: DateTime
}

type FaqEdge {
  node: Faq!
  cursor: String!
}

enum FaqOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  short_description_ASC
  short_description_DESC
  slug_ASC
  slug_DESC
  vertical_ASC
  vertical_DESC
  readingTime_ASC
  readingTime_DESC
  order_ASC
  order_DESC
  pubDate_ASC
  pubDate_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type FaqPreviousValues {
  id: ID!
  title: String!
  description: String
  short_description: String
  slug: String!
  vertical: String
  readingTime: Int
  order: Int
  variant: [String!]!
  tag: [String!]!
  pubDate: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

input FaqScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  short_description: String
  short_description_not: String
  short_description_in: [String!]
  short_description_not_in: [String!]
  short_description_lt: String
  short_description_lte: String
  short_description_gt: String
  short_description_gte: String
  short_description_contains: String
  short_description_not_contains: String
  short_description_starts_with: String
  short_description_not_starts_with: String
  short_description_ends_with: String
  short_description_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  vertical: String
  vertical_not: String
  vertical_in: [String!]
  vertical_not_in: [String!]
  vertical_lt: String
  vertical_lte: String
  vertical_gt: String
  vertical_gte: String
  vertical_contains: String
  vertical_not_contains: String
  vertical_starts_with: String
  vertical_not_starts_with: String
  vertical_ends_with: String
  vertical_not_ends_with: String
  readingTime: Int
  readingTime_not: Int
  readingTime_in: [Int!]
  readingTime_not_in: [Int!]
  readingTime_lt: Int
  readingTime_lte: Int
  readingTime_gt: Int
  readingTime_gte: Int
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  pubDate: DateTime
  pubDate_not: DateTime
  pubDate_in: [DateTime!]
  pubDate_not_in: [DateTime!]
  pubDate_lt: DateTime
  pubDate_lte: DateTime
  pubDate_gt: DateTime
  pubDate_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [FaqScalarWhereInput!]
  OR: [FaqScalarWhereInput!]
  NOT: [FaqScalarWhereInput!]
}

type FaqSubscriptionPayload {
  mutation: MutationType!
  node: Faq
  updatedFields: [String!]
  previousValues: FaqPreviousValues
}

input FaqSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: FaqWhereInput
  AND: [FaqSubscriptionWhereInput!]
  OR: [FaqSubscriptionWhereInput!]
  NOT: [FaqSubscriptionWhereInput!]
}

input FaqUpdateDataInput {
  title: String
  description: String
  short_description: String
  authors: UserUpdateManyInput
  slug: String
  vertical: String
  category: FaqCategoryUpdateManyWithoutFaqsInput
  readingTime: Int
  order: Int
  variant: FaqUpdatevariantInput
  tag: FaqUpdatetagInput
  pubDate: DateTime
}

input FaqUpdateInput {
  title: String
  description: String
  short_description: String
  authors: UserUpdateManyInput
  slug: String
  vertical: String
  category: FaqCategoryUpdateManyWithoutFaqsInput
  readingTime: Int
  order: Int
  variant: FaqUpdatevariantInput
  tag: FaqUpdatetagInput
  pubDate: DateTime
}

input FaqUpdateManyDataInput {
  title: String
  description: String
  short_description: String
  slug: String
  vertical: String
  readingTime: Int
  order: Int
  variant: FaqUpdatevariantInput
  tag: FaqUpdatetagInput
  pubDate: DateTime
}

input FaqUpdateManyMutationInput {
  title: String
  description: String
  short_description: String
  slug: String
  vertical: String
  readingTime: Int
  order: Int
  variant: FaqUpdatevariantInput
  tag: FaqUpdatetagInput
  pubDate: DateTime
}

input FaqUpdateManyWithoutCategoryInput {
  create: [FaqCreateWithoutCategoryInput!]
  delete: [FaqWhereUniqueInput!]
  connect: [FaqWhereUniqueInput!]
  set: [FaqWhereUniqueInput!]
  disconnect: [FaqWhereUniqueInput!]
  update: [FaqUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [FaqUpsertWithWhereUniqueWithoutCategoryInput!]
  deleteMany: [FaqScalarWhereInput!]
  updateMany: [FaqUpdateManyWithWhereNestedInput!]
}

input FaqUpdateManyWithWhereNestedInput {
  where: FaqScalarWhereInput!
  data: FaqUpdateManyDataInput!
}

input FaqUpdateOneRequiredInput {
  create: FaqCreateInput
  update: FaqUpdateDataInput
  upsert: FaqUpsertNestedInput
  connect: FaqWhereUniqueInput
}

input FaqUpdatetagInput {
  set: [String!]
}

input FaqUpdatevariantInput {
  set: [String!]
}

input FaqUpdateWithoutCategoryDataInput {
  title: String
  description: String
  short_description: String
  authors: UserUpdateManyInput
  slug: String
  vertical: String
  readingTime: Int
  order: Int
  variant: FaqUpdatevariantInput
  tag: FaqUpdatetagInput
  pubDate: DateTime
}

input FaqUpdateWithWhereUniqueWithoutCategoryInput {
  where: FaqWhereUniqueInput!
  data: FaqUpdateWithoutCategoryDataInput!
}

input FaqUpsertNestedInput {
  update: FaqUpdateDataInput!
  create: FaqCreateInput!
}

input FaqUpsertWithWhereUniqueWithoutCategoryInput {
  where: FaqWhereUniqueInput!
  update: FaqUpdateWithoutCategoryDataInput!
  create: FaqCreateWithoutCategoryInput!
}

input FaqWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  short_description: String
  short_description_not: String
  short_description_in: [String!]
  short_description_not_in: [String!]
  short_description_lt: String
  short_description_lte: String
  short_description_gt: String
  short_description_gte: String
  short_description_contains: String
  short_description_not_contains: String
  short_description_starts_with: String
  short_description_not_starts_with: String
  short_description_ends_with: String
  short_description_not_ends_with: String
  authors_every: UserWhereInput
  authors_some: UserWhereInput
  authors_none: UserWhereInput
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  vertical: String
  vertical_not: String
  vertical_in: [String!]
  vertical_not_in: [String!]
  vertical_lt: String
  vertical_lte: String
  vertical_gt: String
  vertical_gte: String
  vertical_contains: String
  vertical_not_contains: String
  vertical_starts_with: String
  vertical_not_starts_with: String
  vertical_ends_with: String
  vertical_not_ends_with: String
  category_every: FaqCategoryWhereInput
  category_some: FaqCategoryWhereInput
  category_none: FaqCategoryWhereInput
  readingTime: Int
  readingTime_not: Int
  readingTime_in: [Int!]
  readingTime_not_in: [Int!]
  readingTime_lt: Int
  readingTime_lte: Int
  readingTime_gt: Int
  readingTime_gte: Int
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  pubDate: DateTime
  pubDate_not: DateTime
  pubDate_in: [DateTime!]
  pubDate_not_in: [DateTime!]
  pubDate_lt: DateTime
  pubDate_lte: DateTime
  pubDate_gt: DateTime
  pubDate_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [FaqWhereInput!]
  OR: [FaqWhereInput!]
  NOT: [FaqWhereInput!]
}

input FaqWhereUniqueInput {
  id: ID
}

type Grid {
  id: ID!
  title: String
  page: Page!
  media: Media
  content: String
  order: Int
  items(where: GridItemWhereInput, orderBy: GridItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GridItem!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GridConnection {
  pageInfo: PageInfo!
  edges: [GridEdge]!
  aggregate: AggregateGrid!
}

input GridCreateInput {
  id: ID
  title: String
  page: PageCreateOneWithoutGridsInput!
  media: MediaCreateOneInput
  content: String
  order: Int
  items: GridItemCreateManyWithoutGridInput
}

input GridCreateManyWithoutPageInput {
  create: [GridCreateWithoutPageInput!]
  connect: [GridWhereUniqueInput!]
}

input GridCreateOneWithoutItemsInput {
  create: GridCreateWithoutItemsInput
  connect: GridWhereUniqueInput
}

input GridCreateWithoutItemsInput {
  id: ID
  title: String
  page: PageCreateOneWithoutGridsInput!
  media: MediaCreateOneInput
  content: String
  order: Int
}

input GridCreateWithoutPageInput {
  id: ID
  title: String
  media: MediaCreateOneInput
  content: String
  order: Int
  items: GridItemCreateManyWithoutGridInput
}

type GridEdge {
  node: Grid!
  cursor: String!
}

type GridItem {
  id: ID!
  grid: Grid
  title: String
  content: String
  linkText: String
  linkUrl: String
  media: Media
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GridItemConnection {
  pageInfo: PageInfo!
  edges: [GridItemEdge]!
  aggregate: AggregateGridItem!
}

input GridItemCreateInput {
  id: ID
  grid: GridCreateOneWithoutItemsInput
  title: String
  content: String
  linkText: String
  linkUrl: String
  media: MediaCreateOneInput
}

input GridItemCreateManyWithoutGridInput {
  create: [GridItemCreateWithoutGridInput!]
  connect: [GridItemWhereUniqueInput!]
}

input GridItemCreateWithoutGridInput {
  id: ID
  title: String
  content: String
  linkText: String
  linkUrl: String
  media: MediaCreateOneInput
}

type GridItemEdge {
  node: GridItem!
  cursor: String!
}

enum GridItemOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  linkText_ASC
  linkText_DESC
  linkUrl_ASC
  linkUrl_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GridItemPreviousValues {
  id: ID!
  title: String
  content: String
  linkText: String
  linkUrl: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GridItemScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  linkText: String
  linkText_not: String
  linkText_in: [String!]
  linkText_not_in: [String!]
  linkText_lt: String
  linkText_lte: String
  linkText_gt: String
  linkText_gte: String
  linkText_contains: String
  linkText_not_contains: String
  linkText_starts_with: String
  linkText_not_starts_with: String
  linkText_ends_with: String
  linkText_not_ends_with: String
  linkUrl: String
  linkUrl_not: String
  linkUrl_in: [String!]
  linkUrl_not_in: [String!]
  linkUrl_lt: String
  linkUrl_lte: String
  linkUrl_gt: String
  linkUrl_gte: String
  linkUrl_contains: String
  linkUrl_not_contains: String
  linkUrl_starts_with: String
  linkUrl_not_starts_with: String
  linkUrl_ends_with: String
  linkUrl_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [GridItemScalarWhereInput!]
  OR: [GridItemScalarWhereInput!]
  NOT: [GridItemScalarWhereInput!]
}

type GridItemSubscriptionPayload {
  mutation: MutationType!
  node: GridItem
  updatedFields: [String!]
  previousValues: GridItemPreviousValues
}

input GridItemSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GridItemWhereInput
  AND: [GridItemSubscriptionWhereInput!]
  OR: [GridItemSubscriptionWhereInput!]
  NOT: [GridItemSubscriptionWhereInput!]
}

input GridItemUpdateInput {
  grid: GridUpdateOneWithoutItemsInput
  title: String
  content: String
  linkText: String
  linkUrl: String
  media: MediaUpdateOneInput
}

input GridItemUpdateManyDataInput {
  title: String
  content: String
  linkText: String
  linkUrl: String
}

input GridItemUpdateManyMutationInput {
  title: String
  content: String
  linkText: String
  linkUrl: String
}

input GridItemUpdateManyWithoutGridInput {
  create: [GridItemCreateWithoutGridInput!]
  delete: [GridItemWhereUniqueInput!]
  connect: [GridItemWhereUniqueInput!]
  set: [GridItemWhereUniqueInput!]
  disconnect: [GridItemWhereUniqueInput!]
  update: [GridItemUpdateWithWhereUniqueWithoutGridInput!]
  upsert: [GridItemUpsertWithWhereUniqueWithoutGridInput!]
  deleteMany: [GridItemScalarWhereInput!]
  updateMany: [GridItemUpdateManyWithWhereNestedInput!]
}

input GridItemUpdateManyWithWhereNestedInput {
  where: GridItemScalarWhereInput!
  data: GridItemUpdateManyDataInput!
}

input GridItemUpdateWithoutGridDataInput {
  title: String
  content: String
  linkText: String
  linkUrl: String
  media: MediaUpdateOneInput
}

input GridItemUpdateWithWhereUniqueWithoutGridInput {
  where: GridItemWhereUniqueInput!
  data: GridItemUpdateWithoutGridDataInput!
}

input GridItemUpsertWithWhereUniqueWithoutGridInput {
  where: GridItemWhereUniqueInput!
  update: GridItemUpdateWithoutGridDataInput!
  create: GridItemCreateWithoutGridInput!
}

input GridItemWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  grid: GridWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  linkText: String
  linkText_not: String
  linkText_in: [String!]
  linkText_not_in: [String!]
  linkText_lt: String
  linkText_lte: String
  linkText_gt: String
  linkText_gte: String
  linkText_contains: String
  linkText_not_contains: String
  linkText_starts_with: String
  linkText_not_starts_with: String
  linkText_ends_with: String
  linkText_not_ends_with: String
  linkUrl: String
  linkUrl_not: String
  linkUrl_in: [String!]
  linkUrl_not_in: [String!]
  linkUrl_lt: String
  linkUrl_lte: String
  linkUrl_gt: String
  linkUrl_gte: String
  linkUrl_contains: String
  linkUrl_not_contains: String
  linkUrl_starts_with: String
  linkUrl_not_starts_with: String
  linkUrl_ends_with: String
  linkUrl_not_ends_with: String
  media: MediaWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [GridItemWhereInput!]
  OR: [GridItemWhereInput!]
  NOT: [GridItemWhereInput!]
}

input GridItemWhereUniqueInput {
  id: ID
}

enum GridOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GridPreviousValues {
  id: ID!
  title: String
  content: String
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GridScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [GridScalarWhereInput!]
  OR: [GridScalarWhereInput!]
  NOT: [GridScalarWhereInput!]
}

type GridSubscriptionPayload {
  mutation: MutationType!
  node: Grid
  updatedFields: [String!]
  previousValues: GridPreviousValues
}

input GridSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: GridWhereInput
  AND: [GridSubscriptionWhereInput!]
  OR: [GridSubscriptionWhereInput!]
  NOT: [GridSubscriptionWhereInput!]
}

input GridUpdateInput {
  title: String
  page: PageUpdateOneRequiredWithoutGridsInput
  media: MediaUpdateOneInput
  content: String
  order: Int
  items: GridItemUpdateManyWithoutGridInput
}

input GridUpdateManyDataInput {
  title: String
  content: String
  order: Int
}

input GridUpdateManyMutationInput {
  title: String
  content: String
  order: Int
}

input GridUpdateManyWithoutPageInput {
  create: [GridCreateWithoutPageInput!]
  delete: [GridWhereUniqueInput!]
  connect: [GridWhereUniqueInput!]
  set: [GridWhereUniqueInput!]
  disconnect: [GridWhereUniqueInput!]
  update: [GridUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [GridUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [GridScalarWhereInput!]
  updateMany: [GridUpdateManyWithWhereNestedInput!]
}

input GridUpdateManyWithWhereNestedInput {
  where: GridScalarWhereInput!
  data: GridUpdateManyDataInput!
}

input GridUpdateOneWithoutItemsInput {
  create: GridCreateWithoutItemsInput
  update: GridUpdateWithoutItemsDataInput
  upsert: GridUpsertWithoutItemsInput
  delete: Boolean
  disconnect: Boolean
  connect: GridWhereUniqueInput
}

input GridUpdateWithoutItemsDataInput {
  title: String
  page: PageUpdateOneRequiredWithoutGridsInput
  media: MediaUpdateOneInput
  content: String
  order: Int
}

input GridUpdateWithoutPageDataInput {
  title: String
  media: MediaUpdateOneInput
  content: String
  order: Int
  items: GridItemUpdateManyWithoutGridInput
}

input GridUpdateWithWhereUniqueWithoutPageInput {
  where: GridWhereUniqueInput!
  data: GridUpdateWithoutPageDataInput!
}

input GridUpsertWithoutItemsInput {
  update: GridUpdateWithoutItemsDataInput!
  create: GridCreateWithoutItemsInput!
}

input GridUpsertWithWhereUniqueWithoutPageInput {
  where: GridWhereUniqueInput!
  update: GridUpdateWithoutPageDataInput!
  create: GridCreateWithoutPageInput!
}

input GridWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  page: PageWhereInput
  media: MediaWhereInput
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  items_every: GridItemWhereInput
  items_some: GridItemWhereInput
  items_none: GridItemWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [GridWhereInput!]
  OR: [GridWhereInput!]
  NOT: [GridWhereInput!]
}

input GridWhereUniqueInput {
  id: ID
}

scalar Long

type Media {
  id: ID!
  url: String!
  title: String
  altText: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MediaConnection {
  pageInfo: PageInfo!
  edges: [MediaEdge]!
  aggregate: AggregateMedia!
}

input MediaCreateInput {
  id: ID
  url: String!
  title: String
  altText: String
}

input MediaCreateOneInput {
  create: MediaCreateInput
  connect: MediaWhereUniqueInput
}

type MediaEdge {
  node: Media!
  cursor: String!
}

enum MediaOrderByInput {
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  title_ASC
  title_DESC
  altText_ASC
  altText_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type MediaPreviousValues {
  id: ID!
  url: String!
  title: String
  altText: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MediaSubscriptionPayload {
  mutation: MutationType!
  node: Media
  updatedFields: [String!]
  previousValues: MediaPreviousValues
}

input MediaSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: MediaWhereInput
  AND: [MediaSubscriptionWhereInput!]
  OR: [MediaSubscriptionWhereInput!]
  NOT: [MediaSubscriptionWhereInput!]
}

input MediaUpdateDataInput {
  url: String
  title: String
  altText: String
}

input MediaUpdateInput {
  url: String
  title: String
  altText: String
}

input MediaUpdateManyMutationInput {
  url: String
  title: String
  altText: String
}

input MediaUpdateOneInput {
  create: MediaCreateInput
  update: MediaUpdateDataInput
  upsert: MediaUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: MediaWhereUniqueInput
}

input MediaUpsertNestedInput {
  update: MediaUpdateDataInput!
  create: MediaCreateInput!
}

input MediaWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  altText: String
  altText_not: String
  altText_in: [String!]
  altText_not_in: [String!]
  altText_lt: String
  altText_lte: String
  altText_gt: String
  altText_gte: String
  altText_contains: String
  altText_not_contains: String
  altText_starts_with: String
  altText_not_starts_with: String
  altText_ends_with: String
  altText_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [MediaWhereInput!]
  OR: [MediaWhereInput!]
  NOT: [MediaWhereInput!]
}

input MediaWhereUniqueInput {
  id: ID
  url: String
}

type Mutation {
  createAlertBox(data: AlertBoxCreateInput!): AlertBox!
  updateAlertBox(data: AlertBoxUpdateInput!, where: AlertBoxWhereUniqueInput!): AlertBox
  updateManyAlertBoxes(data: AlertBoxUpdateManyMutationInput!, where: AlertBoxWhereInput): BatchPayload!
  upsertAlertBox(where: AlertBoxWhereUniqueInput!, create: AlertBoxCreateInput!, update: AlertBoxUpdateInput!): AlertBox!
  deleteAlertBox(where: AlertBoxWhereUniqueInput!): AlertBox
  deleteManyAlertBoxes(where: AlertBoxWhereInput): BatchPayload!
  createBlock(data: BlockCreateInput!): Block!
  updateBlock(data: BlockUpdateInput!, where: BlockWhereUniqueInput!): Block
  updateManyBlocks(data: BlockUpdateManyMutationInput!, where: BlockWhereInput): BatchPayload!
  upsertBlock(where: BlockWhereUniqueInput!, create: BlockCreateInput!, update: BlockUpdateInput!): Block!
  deleteBlock(where: BlockWhereUniqueInput!): Block
  deleteManyBlocks(where: BlockWhereInput): BatchPayload!
  createBox(data: BoxCreateInput!): Box!
  updateBox(data: BoxUpdateInput!, where: BoxWhereUniqueInput!): Box
  updateManyBoxes(data: BoxUpdateManyMutationInput!, where: BoxWhereInput): BatchPayload!
  upsertBox(where: BoxWhereUniqueInput!, create: BoxCreateInput!, update: BoxUpdateInput!): Box!
  deleteBox(where: BoxWhereUniqueInput!): Box
  deleteManyBoxes(where: BoxWhereInput): BatchPayload!
  createComponent(data: ComponentCreateInput!): Component!
  updateComponent(data: ComponentUpdateInput!, where: ComponentWhereUniqueInput!): Component
  updateManyComponents(data: ComponentUpdateManyMutationInput!, where: ComponentWhereInput): BatchPayload!
  upsertComponent(where: ComponentWhereUniqueInput!, create: ComponentCreateInput!, update: ComponentUpdateInput!): Component!
  deleteComponent(where: ComponentWhereUniqueInput!): Component
  deleteManyComponents(where: ComponentWhereInput): BatchPayload!
  createCons(data: ConsCreateInput!): Cons!
  updateCons(data: ConsUpdateInput!, where: ConsWhereUniqueInput!): Cons
  updateManyConses(data: ConsUpdateManyMutationInput!, where: ConsWhereInput): BatchPayload!
  upsertCons(where: ConsWhereUniqueInput!, create: ConsCreateInput!, update: ConsUpdateInput!): Cons!
  deleteCons(where: ConsWhereUniqueInput!): Cons
  deleteManyConses(where: ConsWhereInput): BatchPayload!
  createFaq(data: FaqCreateInput!): Faq!
  updateFaq(data: FaqUpdateInput!, where: FaqWhereUniqueInput!): Faq
  updateManyFaqs(data: FaqUpdateManyMutationInput!, where: FaqWhereInput): BatchPayload!
  upsertFaq(where: FaqWhereUniqueInput!, create: FaqCreateInput!, update: FaqUpdateInput!): Faq!
  deleteFaq(where: FaqWhereUniqueInput!): Faq
  deleteManyFaqs(where: FaqWhereInput): BatchPayload!
  createFaqCategory(data: FaqCategoryCreateInput!): FaqCategory!
  updateFaqCategory(data: FaqCategoryUpdateInput!, where: FaqCategoryWhereUniqueInput!): FaqCategory
  updateManyFaqCategories(data: FaqCategoryUpdateManyMutationInput!, where: FaqCategoryWhereInput): BatchPayload!
  upsertFaqCategory(where: FaqCategoryWhereUniqueInput!, create: FaqCategoryCreateInput!, update: FaqCategoryUpdateInput!): FaqCategory!
  deleteFaqCategory(where: FaqCategoryWhereUniqueInput!): FaqCategory
  deleteManyFaqCategories(where: FaqCategoryWhereInput): BatchPayload!
  createGrid(data: GridCreateInput!): Grid!
  updateGrid(data: GridUpdateInput!, where: GridWhereUniqueInput!): Grid
  updateManyGrids(data: GridUpdateManyMutationInput!, where: GridWhereInput): BatchPayload!
  upsertGrid(where: GridWhereUniqueInput!, create: GridCreateInput!, update: GridUpdateInput!): Grid!
  deleteGrid(where: GridWhereUniqueInput!): Grid
  deleteManyGrids(where: GridWhereInput): BatchPayload!
  createGridItem(data: GridItemCreateInput!): GridItem!
  updateGridItem(data: GridItemUpdateInput!, where: GridItemWhereUniqueInput!): GridItem
  updateManyGridItems(data: GridItemUpdateManyMutationInput!, where: GridItemWhereInput): BatchPayload!
  upsertGridItem(where: GridItemWhereUniqueInput!, create: GridItemCreateInput!, update: GridItemUpdateInput!): GridItem!
  deleteGridItem(where: GridItemWhereUniqueInput!): GridItem
  deleteManyGridItems(where: GridItemWhereInput): BatchPayload!
  createMedia(data: MediaCreateInput!): Media!
  updateMedia(data: MediaUpdateInput!, where: MediaWhereUniqueInput!): Media
  updateManyMedias(data: MediaUpdateManyMutationInput!, where: MediaWhereInput): BatchPayload!
  upsertMedia(where: MediaWhereUniqueInput!, create: MediaCreateInput!, update: MediaUpdateInput!): Media!
  deleteMedia(where: MediaWhereUniqueInput!): Media
  deleteManyMedias(where: MediaWhereInput): BatchPayload!
  createPage(data: PageCreateInput!): Page!
  updatePage(data: PageUpdateInput!, where: PageWhereUniqueInput!): Page
  updateManyPages(data: PageUpdateManyMutationInput!, where: PageWhereInput): BatchPayload!
  upsertPage(where: PageWhereUniqueInput!, create: PageCreateInput!, update: PageUpdateInput!): Page!
  deletePage(where: PageWhereUniqueInput!): Page
  deleteManyPages(where: PageWhereInput): BatchPayload!
  createPageFaq(data: PageFaqCreateInput!): PageFaq!
  updatePageFaq(data: PageFaqUpdateInput!, where: PageFaqWhereUniqueInput!): PageFaq
  updateManyPageFaqs(data: PageFaqUpdateManyMutationInput!, where: PageFaqWhereInput): BatchPayload!
  upsertPageFaq(where: PageFaqWhereUniqueInput!, create: PageFaqCreateInput!, update: PageFaqUpdateInput!): PageFaq!
  deletePageFaq(where: PageFaqWhereUniqueInput!): PageFaq
  deleteManyPageFaqs(where: PageFaqWhereInput): BatchPayload!
  createPageFaqAccordion(data: PageFaqAccordionCreateInput!): PageFaqAccordion!
  updatePageFaqAccordion(data: PageFaqAccordionUpdateInput!, where: PageFaqAccordionWhereUniqueInput!): PageFaqAccordion
  updateManyPageFaqAccordions(data: PageFaqAccordionUpdateManyMutationInput!, where: PageFaqAccordionWhereInput): BatchPayload!
  upsertPageFaqAccordion(where: PageFaqAccordionWhereUniqueInput!, create: PageFaqAccordionCreateInput!, update: PageFaqAccordionUpdateInput!): PageFaqAccordion!
  deletePageFaqAccordion(where: PageFaqAccordionWhereUniqueInput!): PageFaqAccordion
  deleteManyPageFaqAccordions(where: PageFaqAccordionWhereInput): BatchPayload!
  createPros(data: ProsCreateInput!): Pros!
  updatePros(data: ProsUpdateInput!, where: ProsWhereUniqueInput!): Pros
  updateManyProses(data: ProsUpdateManyMutationInput!, where: ProsWhereInput): BatchPayload!
  upsertPros(where: ProsWhereUniqueInput!, create: ProsCreateInput!, update: ProsUpdateInput!): Pros!
  deletePros(where: ProsWhereUniqueInput!): Pros
  deleteManyProses(where: ProsWhereInput): BatchPayload!
  createProsAndCons(data: ProsAndConsCreateInput!): ProsAndCons!
  updateProsAndCons(data: ProsAndConsUpdateInput!, where: ProsAndConsWhereUniqueInput!): ProsAndCons
  updateManyProsAndConses(data: ProsAndConsUpdateManyMutationInput!, where: ProsAndConsWhereInput): BatchPayload!
  upsertProsAndCons(where: ProsAndConsWhereUniqueInput!, create: ProsAndConsCreateInput!, update: ProsAndConsUpdateInput!): ProsAndCons!
  deleteProsAndCons(where: ProsAndConsWhereUniqueInput!): ProsAndCons
  deleteManyProsAndConses(where: ProsAndConsWhereInput): BatchPayload!
  createQuickTip(data: QuickTipCreateInput!): QuickTip!
  updateQuickTip(data: QuickTipUpdateInput!, where: QuickTipWhereUniqueInput!): QuickTip
  updateManyQuickTips(data: QuickTipUpdateManyMutationInput!, where: QuickTipWhereInput): BatchPayload!
  upsertQuickTip(where: QuickTipWhereUniqueInput!, create: QuickTipCreateInput!, update: QuickTipUpdateInput!): QuickTip!
  deleteQuickTip(where: QuickTipWhereUniqueInput!): QuickTip
  deleteManyQuickTips(where: QuickTipWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type Page {
  id: ID!
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: Media
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks(where: BlockWhereInput, orderBy: BlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Block!]
  boxes(where: BoxWhereInput, orderBy: BoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Box!]
  prosAndCons(where: ProsAndConsWhereInput, orderBy: ProsAndConsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProsAndCons!]
  alertBoxes(where: AlertBoxWhereInput, orderBy: AlertBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AlertBox!]
  quickTips(where: QuickTipWhereInput, orderBy: QuickTipOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [QuickTip!]
  faqs(where: PageFaqWhereInput, orderBy: PageFaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PageFaq!]
  faqAccordion(where: PageFaqAccordionWhereInput, orderBy: PageFaqAccordionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PageFaqAccordion!]
  grids(where: GridWhereInput, orderBy: GridOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Grid!]
  components(where: ComponentWhereInput, orderBy: ComponentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Component!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PageConnection {
  pageInfo: PageInfo!
  edges: [PageEdge]!
  aggregate: AggregatePage!
}

input PageCreateInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  boxes: BoxCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

input PageCreateOneWithoutAlertBoxesInput {
  create: PageCreateWithoutAlertBoxesInput
  connect: PageWhereUniqueInput
}

input PageCreateOneWithoutBlocksInput {
  create: PageCreateWithoutBlocksInput
  connect: PageWhereUniqueInput
}

input PageCreateOneWithoutBoxesInput {
  create: PageCreateWithoutBoxesInput
  connect: PageWhereUniqueInput
}

input PageCreateOneWithoutComponentsInput {
  create: PageCreateWithoutComponentsInput
  connect: PageWhereUniqueInput
}

input PageCreateOneWithoutFaqAccordionInput {
  create: PageCreateWithoutFaqAccordionInput
  connect: PageWhereUniqueInput
}

input PageCreateOneWithoutFaqsInput {
  create: PageCreateWithoutFaqsInput
  connect: PageWhereUniqueInput
}

input PageCreateOneWithoutGridsInput {
  create: PageCreateWithoutGridsInput
  connect: PageWhereUniqueInput
}

input PageCreateOneWithoutProsAndConsInput {
  create: PageCreateWithoutProsAndConsInput
  connect: PageWhereUniqueInput
}

input PageCreateOneWithoutQuickTipsInput {
  create: PageCreateWithoutQuickTipsInput
  connect: PageWhereUniqueInput
}

input PageCreateWithoutAlertBoxesInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  boxes: BoxCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

input PageCreateWithoutBlocksInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  boxes: BoxCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

input PageCreateWithoutBoxesInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

input PageCreateWithoutComponentsInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  boxes: BoxCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
}

input PageCreateWithoutFaqAccordionInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  boxes: BoxCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

input PageCreateWithoutFaqsInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  boxes: BoxCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

input PageCreateWithoutGridsInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  boxes: BoxCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

input PageCreateWithoutProsAndConsInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  boxes: BoxCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  quickTips: QuickTipCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

input PageCreateWithoutQuickTipsInput {
  id: ID
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: MediaCreateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockCreateManyWithoutPageInput
  boxes: BoxCreateManyWithoutPageInput
  prosAndCons: ProsAndConsCreateManyWithoutPageInput
  alertBoxes: AlertBoxCreateManyWithoutPageInput
  faqs: PageFaqCreateManyWithoutPageInput
  faqAccordion: PageFaqAccordionCreateManyWithoutPageInput
  grids: GridCreateManyWithoutPageInput
  components: ComponentCreateManyWithoutPageInput
}

type PageEdge {
  node: Page!
  cursor: String!
}

type PageFaq {
  id: ID!
  order: Int
  page: Page!
  faq: Faq!
}

type PageFaqAccordion {
  id: ID!
  order: Int
  page: Page!
  faqCategory: FaqCategory!
}

type PageFaqAccordionConnection {
  pageInfo: PageInfo!
  edges: [PageFaqAccordionEdge]!
  aggregate: AggregatePageFaqAccordion!
}

input PageFaqAccordionCreateInput {
  id: ID
  order: Int
  page: PageCreateOneWithoutFaqAccordionInput!
  faqCategory: FaqCategoryCreateOneInput!
}

input PageFaqAccordionCreateManyWithoutPageInput {
  create: [PageFaqAccordionCreateWithoutPageInput!]
  connect: [PageFaqAccordionWhereUniqueInput!]
}

input PageFaqAccordionCreateWithoutPageInput {
  id: ID
  order: Int
  faqCategory: FaqCategoryCreateOneInput!
}

type PageFaqAccordionEdge {
  node: PageFaqAccordion!
  cursor: String!
}

enum PageFaqAccordionOrderByInput {
  id_ASC
  id_DESC
  order_ASC
  order_DESC
}

type PageFaqAccordionPreviousValues {
  id: ID!
  order: Int
}

input PageFaqAccordionScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  AND: [PageFaqAccordionScalarWhereInput!]
  OR: [PageFaqAccordionScalarWhereInput!]
  NOT: [PageFaqAccordionScalarWhereInput!]
}

type PageFaqAccordionSubscriptionPayload {
  mutation: MutationType!
  node: PageFaqAccordion
  updatedFields: [String!]
  previousValues: PageFaqAccordionPreviousValues
}

input PageFaqAccordionSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PageFaqAccordionWhereInput
  AND: [PageFaqAccordionSubscriptionWhereInput!]
  OR: [PageFaqAccordionSubscriptionWhereInput!]
  NOT: [PageFaqAccordionSubscriptionWhereInput!]
}

input PageFaqAccordionUpdateInput {
  order: Int
  page: PageUpdateOneRequiredWithoutFaqAccordionInput
  faqCategory: FaqCategoryUpdateOneRequiredInput
}

input PageFaqAccordionUpdateManyDataInput {
  order: Int
}

input PageFaqAccordionUpdateManyMutationInput {
  order: Int
}

input PageFaqAccordionUpdateManyWithoutPageInput {
  create: [PageFaqAccordionCreateWithoutPageInput!]
  delete: [PageFaqAccordionWhereUniqueInput!]
  connect: [PageFaqAccordionWhereUniqueInput!]
  set: [PageFaqAccordionWhereUniqueInput!]
  disconnect: [PageFaqAccordionWhereUniqueInput!]
  update: [PageFaqAccordionUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [PageFaqAccordionUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [PageFaqAccordionScalarWhereInput!]
  updateMany: [PageFaqAccordionUpdateManyWithWhereNestedInput!]
}

input PageFaqAccordionUpdateManyWithWhereNestedInput {
  where: PageFaqAccordionScalarWhereInput!
  data: PageFaqAccordionUpdateManyDataInput!
}

input PageFaqAccordionUpdateWithoutPageDataInput {
  order: Int
  faqCategory: FaqCategoryUpdateOneRequiredInput
}

input PageFaqAccordionUpdateWithWhereUniqueWithoutPageInput {
  where: PageFaqAccordionWhereUniqueInput!
  data: PageFaqAccordionUpdateWithoutPageDataInput!
}

input PageFaqAccordionUpsertWithWhereUniqueWithoutPageInput {
  where: PageFaqAccordionWhereUniqueInput!
  update: PageFaqAccordionUpdateWithoutPageDataInput!
  create: PageFaqAccordionCreateWithoutPageInput!
}

input PageFaqAccordionWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  page: PageWhereInput
  faqCategory: FaqCategoryWhereInput
  AND: [PageFaqAccordionWhereInput!]
  OR: [PageFaqAccordionWhereInput!]
  NOT: [PageFaqAccordionWhereInput!]
}

input PageFaqAccordionWhereUniqueInput {
  id: ID
}

type PageFaqConnection {
  pageInfo: PageInfo!
  edges: [PageFaqEdge]!
  aggregate: AggregatePageFaq!
}

input PageFaqCreateInput {
  id: ID
  order: Int
  page: PageCreateOneWithoutFaqsInput!
  faq: FaqCreateOneInput!
}

input PageFaqCreateManyWithoutPageInput {
  create: [PageFaqCreateWithoutPageInput!]
  connect: [PageFaqWhereUniqueInput!]
}

input PageFaqCreateWithoutPageInput {
  id: ID
  order: Int
  faq: FaqCreateOneInput!
}

type PageFaqEdge {
  node: PageFaq!
  cursor: String!
}

enum PageFaqOrderByInput {
  id_ASC
  id_DESC
  order_ASC
  order_DESC
}

type PageFaqPreviousValues {
  id: ID!
  order: Int
}

input PageFaqScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  AND: [PageFaqScalarWhereInput!]
  OR: [PageFaqScalarWhereInput!]
  NOT: [PageFaqScalarWhereInput!]
}

type PageFaqSubscriptionPayload {
  mutation: MutationType!
  node: PageFaq
  updatedFields: [String!]
  previousValues: PageFaqPreviousValues
}

input PageFaqSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PageFaqWhereInput
  AND: [PageFaqSubscriptionWhereInput!]
  OR: [PageFaqSubscriptionWhereInput!]
  NOT: [PageFaqSubscriptionWhereInput!]
}

input PageFaqUpdateInput {
  order: Int
  page: PageUpdateOneRequiredWithoutFaqsInput
  faq: FaqUpdateOneRequiredInput
}

input PageFaqUpdateManyDataInput {
  order: Int
}

input PageFaqUpdateManyMutationInput {
  order: Int
}

input PageFaqUpdateManyWithoutPageInput {
  create: [PageFaqCreateWithoutPageInput!]
  delete: [PageFaqWhereUniqueInput!]
  connect: [PageFaqWhereUniqueInput!]
  set: [PageFaqWhereUniqueInput!]
  disconnect: [PageFaqWhereUniqueInput!]
  update: [PageFaqUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [PageFaqUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [PageFaqScalarWhereInput!]
  updateMany: [PageFaqUpdateManyWithWhereNestedInput!]
}

input PageFaqUpdateManyWithWhereNestedInput {
  where: PageFaqScalarWhereInput!
  data: PageFaqUpdateManyDataInput!
}

input PageFaqUpdateWithoutPageDataInput {
  order: Int
  faq: FaqUpdateOneRequiredInput
}

input PageFaqUpdateWithWhereUniqueWithoutPageInput {
  where: PageFaqWhereUniqueInput!
  data: PageFaqUpdateWithoutPageDataInput!
}

input PageFaqUpsertWithWhereUniqueWithoutPageInput {
  where: PageFaqWhereUniqueInput!
  update: PageFaqUpdateWithoutPageDataInput!
  create: PageFaqCreateWithoutPageInput!
}

input PageFaqWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  page: PageWhereInput
  faq: FaqWhereInput
  AND: [PageFaqWhereInput!]
  OR: [PageFaqWhereInput!]
  NOT: [PageFaqWhereInput!]
}

input PageFaqWhereUniqueInput {
  id: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

enum PageOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  url_ASC
  url_DESC
  type_ASC
  type_DESC
  status_ASC
  status_DESC
  vertical_ASC
  vertical_DESC
  template_ASC
  template_DESC
  header_ASC
  header_DESC
  tagline_ASC
  tagline_DESC
  resultName_ASC
  resultName_DESC
  description_ASC
  description_DESC
  keywords_ASC
  keywords_DESC
  canonical_ASC
  canonical_DESC
  userJourneyStage_ASC
  userJourneyStage_DESC
  content_ASC
  content_DESC
  contentSummary_ASC
  contentSummary_DESC
  category_ASC
  category_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type PagePreviousValues {
  id: ID!
  title: String!
  slug: String!
  url: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum PageStatus {
  DRAFT
  PUBLISHED
  DELETED
}

type PageSubscriptionPayload {
  mutation: MutationType!
  node: Page
  updatedFields: [String!]
  previousValues: PagePreviousValues
}

input PageSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PageWhereInput
  AND: [PageSubscriptionWhereInput!]
  OR: [PageSubscriptionWhereInput!]
  NOT: [PageSubscriptionWhereInput!]
}

enum PageType {
  PAGE
  NEWS
  ARTICLE
  STATIC
  GUIDE
}

input PageUpdateInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  boxes: BoxUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpdateManyMutationInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
}

input PageUpdateOneRequiredWithoutAlertBoxesInput {
  create: PageCreateWithoutAlertBoxesInput
  update: PageUpdateWithoutAlertBoxesDataInput
  upsert: PageUpsertWithoutAlertBoxesInput
  connect: PageWhereUniqueInput
}

input PageUpdateOneRequiredWithoutBlocksInput {
  create: PageCreateWithoutBlocksInput
  update: PageUpdateWithoutBlocksDataInput
  upsert: PageUpsertWithoutBlocksInput
  connect: PageWhereUniqueInput
}

input PageUpdateOneRequiredWithoutBoxesInput {
  create: PageCreateWithoutBoxesInput
  update: PageUpdateWithoutBoxesDataInput
  upsert: PageUpsertWithoutBoxesInput
  connect: PageWhereUniqueInput
}

input PageUpdateOneRequiredWithoutComponentsInput {
  create: PageCreateWithoutComponentsInput
  update: PageUpdateWithoutComponentsDataInput
  upsert: PageUpsertWithoutComponentsInput
  connect: PageWhereUniqueInput
}

input PageUpdateOneRequiredWithoutFaqAccordionInput {
  create: PageCreateWithoutFaqAccordionInput
  update: PageUpdateWithoutFaqAccordionDataInput
  upsert: PageUpsertWithoutFaqAccordionInput
  connect: PageWhereUniqueInput
}

input PageUpdateOneRequiredWithoutFaqsInput {
  create: PageCreateWithoutFaqsInput
  update: PageUpdateWithoutFaqsDataInput
  upsert: PageUpsertWithoutFaqsInput
  connect: PageWhereUniqueInput
}

input PageUpdateOneRequiredWithoutGridsInput {
  create: PageCreateWithoutGridsInput
  update: PageUpdateWithoutGridsDataInput
  upsert: PageUpsertWithoutGridsInput
  connect: PageWhereUniqueInput
}

input PageUpdateOneRequiredWithoutProsAndConsInput {
  create: PageCreateWithoutProsAndConsInput
  update: PageUpdateWithoutProsAndConsDataInput
  upsert: PageUpsertWithoutProsAndConsInput
  connect: PageWhereUniqueInput
}

input PageUpdateOneRequiredWithoutQuickTipsInput {
  create: PageCreateWithoutQuickTipsInput
  update: PageUpdateWithoutQuickTipsDataInput
  upsert: PageUpsertWithoutQuickTipsInput
  connect: PageWhereUniqueInput
}

input PageUpdateWithoutAlertBoxesDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  boxes: BoxUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpdateWithoutBlocksDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  boxes: BoxUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpdateWithoutBoxesDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpdateWithoutComponentsDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  boxes: BoxUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
}

input PageUpdateWithoutFaqAccordionDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  boxes: BoxUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpdateWithoutFaqsDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  boxes: BoxUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpdateWithoutGridsDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  boxes: BoxUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpdateWithoutProsAndConsDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  boxes: BoxUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  quickTips: QuickTipUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpdateWithoutQuickTipsDataInput {
  title: String
  slug: String
  url: String
  type: PageType
  status: PageStatus
  vertical: String
  media: MediaUpdateOneInput
  template: String
  header: String
  tagline: String
  resultName: String
  description: String
  keywords: String
  canonical: String
  userJourneyStage: String
  content: String
  contentSummary: String
  category: String
  blocks: BlockUpdateManyWithoutPageInput
  boxes: BoxUpdateManyWithoutPageInput
  prosAndCons: ProsAndConsUpdateManyWithoutPageInput
  alertBoxes: AlertBoxUpdateManyWithoutPageInput
  faqs: PageFaqUpdateManyWithoutPageInput
  faqAccordion: PageFaqAccordionUpdateManyWithoutPageInput
  grids: GridUpdateManyWithoutPageInput
  components: ComponentUpdateManyWithoutPageInput
}

input PageUpsertWithoutAlertBoxesInput {
  update: PageUpdateWithoutAlertBoxesDataInput!
  create: PageCreateWithoutAlertBoxesInput!
}

input PageUpsertWithoutBlocksInput {
  update: PageUpdateWithoutBlocksDataInput!
  create: PageCreateWithoutBlocksInput!
}

input PageUpsertWithoutBoxesInput {
  update: PageUpdateWithoutBoxesDataInput!
  create: PageCreateWithoutBoxesInput!
}

input PageUpsertWithoutComponentsInput {
  update: PageUpdateWithoutComponentsDataInput!
  create: PageCreateWithoutComponentsInput!
}

input PageUpsertWithoutFaqAccordionInput {
  update: PageUpdateWithoutFaqAccordionDataInput!
  create: PageCreateWithoutFaqAccordionInput!
}

input PageUpsertWithoutFaqsInput {
  update: PageUpdateWithoutFaqsDataInput!
  create: PageCreateWithoutFaqsInput!
}

input PageUpsertWithoutGridsInput {
  update: PageUpdateWithoutGridsDataInput!
  create: PageCreateWithoutGridsInput!
}

input PageUpsertWithoutProsAndConsInput {
  update: PageUpdateWithoutProsAndConsDataInput!
  create: PageCreateWithoutProsAndConsInput!
}

input PageUpsertWithoutQuickTipsInput {
  update: PageUpdateWithoutQuickTipsDataInput!
  create: PageCreateWithoutQuickTipsInput!
}

input PageWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  slug: String
  slug_not: String
  slug_in: [String!]
  slug_not_in: [String!]
  slug_lt: String
  slug_lte: String
  slug_gt: String
  slug_gte: String
  slug_contains: String
  slug_not_contains: String
  slug_starts_with: String
  slug_not_starts_with: String
  slug_ends_with: String
  slug_not_ends_with: String
  url: String
  url_not: String
  url_in: [String!]
  url_not_in: [String!]
  url_lt: String
  url_lte: String
  url_gt: String
  url_gte: String
  url_contains: String
  url_not_contains: String
  url_starts_with: String
  url_not_starts_with: String
  url_ends_with: String
  url_not_ends_with: String
  type: PageType
  type_not: PageType
  type_in: [PageType!]
  type_not_in: [PageType!]
  status: PageStatus
  status_not: PageStatus
  status_in: [PageStatus!]
  status_not_in: [PageStatus!]
  vertical: String
  vertical_not: String
  vertical_in: [String!]
  vertical_not_in: [String!]
  vertical_lt: String
  vertical_lte: String
  vertical_gt: String
  vertical_gte: String
  vertical_contains: String
  vertical_not_contains: String
  vertical_starts_with: String
  vertical_not_starts_with: String
  vertical_ends_with: String
  vertical_not_ends_with: String
  media: MediaWhereInput
  template: String
  template_not: String
  template_in: [String!]
  template_not_in: [String!]
  template_lt: String
  template_lte: String
  template_gt: String
  template_gte: String
  template_contains: String
  template_not_contains: String
  template_starts_with: String
  template_not_starts_with: String
  template_ends_with: String
  template_not_ends_with: String
  header: String
  header_not: String
  header_in: [String!]
  header_not_in: [String!]
  header_lt: String
  header_lte: String
  header_gt: String
  header_gte: String
  header_contains: String
  header_not_contains: String
  header_starts_with: String
  header_not_starts_with: String
  header_ends_with: String
  header_not_ends_with: String
  tagline: String
  tagline_not: String
  tagline_in: [String!]
  tagline_not_in: [String!]
  tagline_lt: String
  tagline_lte: String
  tagline_gt: String
  tagline_gte: String
  tagline_contains: String
  tagline_not_contains: String
  tagline_starts_with: String
  tagline_not_starts_with: String
  tagline_ends_with: String
  tagline_not_ends_with: String
  resultName: String
  resultName_not: String
  resultName_in: [String!]
  resultName_not_in: [String!]
  resultName_lt: String
  resultName_lte: String
  resultName_gt: String
  resultName_gte: String
  resultName_contains: String
  resultName_not_contains: String
  resultName_starts_with: String
  resultName_not_starts_with: String
  resultName_ends_with: String
  resultName_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  keywords: String
  keywords_not: String
  keywords_in: [String!]
  keywords_not_in: [String!]
  keywords_lt: String
  keywords_lte: String
  keywords_gt: String
  keywords_gte: String
  keywords_contains: String
  keywords_not_contains: String
  keywords_starts_with: String
  keywords_not_starts_with: String
  keywords_ends_with: String
  keywords_not_ends_with: String
  canonical: String
  canonical_not: String
  canonical_in: [String!]
  canonical_not_in: [String!]
  canonical_lt: String
  canonical_lte: String
  canonical_gt: String
  canonical_gte: String
  canonical_contains: String
  canonical_not_contains: String
  canonical_starts_with: String
  canonical_not_starts_with: String
  canonical_ends_with: String
  canonical_not_ends_with: String
  userJourneyStage: String
  userJourneyStage_not: String
  userJourneyStage_in: [String!]
  userJourneyStage_not_in: [String!]
  userJourneyStage_lt: String
  userJourneyStage_lte: String
  userJourneyStage_gt: String
  userJourneyStage_gte: String
  userJourneyStage_contains: String
  userJourneyStage_not_contains: String
  userJourneyStage_starts_with: String
  userJourneyStage_not_starts_with: String
  userJourneyStage_ends_with: String
  userJourneyStage_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  contentSummary: String
  contentSummary_not: String
  contentSummary_in: [String!]
  contentSummary_not_in: [String!]
  contentSummary_lt: String
  contentSummary_lte: String
  contentSummary_gt: String
  contentSummary_gte: String
  contentSummary_contains: String
  contentSummary_not_contains: String
  contentSummary_starts_with: String
  contentSummary_not_starts_with: String
  contentSummary_ends_with: String
  contentSummary_not_ends_with: String
  category: String
  category_not: String
  category_in: [String!]
  category_not_in: [String!]
  category_lt: String
  category_lte: String
  category_gt: String
  category_gte: String
  category_contains: String
  category_not_contains: String
  category_starts_with: String
  category_not_starts_with: String
  category_ends_with: String
  category_not_ends_with: String
  blocks_every: BlockWhereInput
  blocks_some: BlockWhereInput
  blocks_none: BlockWhereInput
  boxes_every: BoxWhereInput
  boxes_some: BoxWhereInput
  boxes_none: BoxWhereInput
  prosAndCons_every: ProsAndConsWhereInput
  prosAndCons_some: ProsAndConsWhereInput
  prosAndCons_none: ProsAndConsWhereInput
  alertBoxes_every: AlertBoxWhereInput
  alertBoxes_some: AlertBoxWhereInput
  alertBoxes_none: AlertBoxWhereInput
  quickTips_every: QuickTipWhereInput
  quickTips_some: QuickTipWhereInput
  quickTips_none: QuickTipWhereInput
  faqs_every: PageFaqWhereInput
  faqs_some: PageFaqWhereInput
  faqs_none: PageFaqWhereInput
  faqAccordion_every: PageFaqAccordionWhereInput
  faqAccordion_some: PageFaqAccordionWhereInput
  faqAccordion_none: PageFaqAccordionWhereInput
  grids_every: GridWhereInput
  grids_some: GridWhereInput
  grids_none: GridWhereInput
  components_every: ComponentWhereInput
  components_some: ComponentWhereInput
  components_none: ComponentWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [PageWhereInput!]
  OR: [PageWhereInput!]
  NOT: [PageWhereInput!]
}

input PageWhereUniqueInput {
  id: ID
  url: String
}

enum Permission {
  ADMIN
  USER
}

type Pros {
  id: ID!
  prosAndCons: ProsAndCons!
  content: String
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProsAndCons {
  id: ID!
  page: Page!
  title: String
  top: Boolean
  order: Int
  pros(where: ProsWhereInput, orderBy: ProsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pros!]
  cons(where: ConsWhereInput, orderBy: ConsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cons!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProsAndConsConnection {
  pageInfo: PageInfo!
  edges: [ProsAndConsEdge]!
  aggregate: AggregateProsAndCons!
}

input ProsAndConsCreateInput {
  id: ID
  page: PageCreateOneWithoutProsAndConsInput!
  title: String
  top: Boolean
  order: Int
  pros: ProsCreateManyWithoutProsAndConsInput
  cons: ConsCreateManyWithoutProsAndConsInput
}

input ProsAndConsCreateManyWithoutPageInput {
  create: [ProsAndConsCreateWithoutPageInput!]
  connect: [ProsAndConsWhereUniqueInput!]
}

input ProsAndConsCreateOneWithoutConsInput {
  create: ProsAndConsCreateWithoutConsInput
  connect: ProsAndConsWhereUniqueInput
}

input ProsAndConsCreateOneWithoutProsInput {
  create: ProsAndConsCreateWithoutProsInput
  connect: ProsAndConsWhereUniqueInput
}

input ProsAndConsCreateWithoutConsInput {
  id: ID
  page: PageCreateOneWithoutProsAndConsInput!
  title: String
  top: Boolean
  order: Int
  pros: ProsCreateManyWithoutProsAndConsInput
}

input ProsAndConsCreateWithoutPageInput {
  id: ID
  title: String
  top: Boolean
  order: Int
  pros: ProsCreateManyWithoutProsAndConsInput
  cons: ConsCreateManyWithoutProsAndConsInput
}

input ProsAndConsCreateWithoutProsInput {
  id: ID
  page: PageCreateOneWithoutProsAndConsInput!
  title: String
  top: Boolean
  order: Int
  cons: ConsCreateManyWithoutProsAndConsInput
}

type ProsAndConsEdge {
  node: ProsAndCons!
  cursor: String!
}

enum ProsAndConsOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  top_ASC
  top_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProsAndConsPreviousValues {
  id: ID!
  title: String
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProsAndConsScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProsAndConsScalarWhereInput!]
  OR: [ProsAndConsScalarWhereInput!]
  NOT: [ProsAndConsScalarWhereInput!]
}

type ProsAndConsSubscriptionPayload {
  mutation: MutationType!
  node: ProsAndCons
  updatedFields: [String!]
  previousValues: ProsAndConsPreviousValues
}

input ProsAndConsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProsAndConsWhereInput
  AND: [ProsAndConsSubscriptionWhereInput!]
  OR: [ProsAndConsSubscriptionWhereInput!]
  NOT: [ProsAndConsSubscriptionWhereInput!]
}

input ProsAndConsUpdateInput {
  page: PageUpdateOneRequiredWithoutProsAndConsInput
  title: String
  top: Boolean
  order: Int
  pros: ProsUpdateManyWithoutProsAndConsInput
  cons: ConsUpdateManyWithoutProsAndConsInput
}

input ProsAndConsUpdateManyDataInput {
  title: String
  top: Boolean
  order: Int
}

input ProsAndConsUpdateManyMutationInput {
  title: String
  top: Boolean
  order: Int
}

input ProsAndConsUpdateManyWithoutPageInput {
  create: [ProsAndConsCreateWithoutPageInput!]
  delete: [ProsAndConsWhereUniqueInput!]
  connect: [ProsAndConsWhereUniqueInput!]
  set: [ProsAndConsWhereUniqueInput!]
  disconnect: [ProsAndConsWhereUniqueInput!]
  update: [ProsAndConsUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [ProsAndConsUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [ProsAndConsScalarWhereInput!]
  updateMany: [ProsAndConsUpdateManyWithWhereNestedInput!]
}

input ProsAndConsUpdateManyWithWhereNestedInput {
  where: ProsAndConsScalarWhereInput!
  data: ProsAndConsUpdateManyDataInput!
}

input ProsAndConsUpdateOneRequiredWithoutConsInput {
  create: ProsAndConsCreateWithoutConsInput
  update: ProsAndConsUpdateWithoutConsDataInput
  upsert: ProsAndConsUpsertWithoutConsInput
  connect: ProsAndConsWhereUniqueInput
}

input ProsAndConsUpdateOneRequiredWithoutProsInput {
  create: ProsAndConsCreateWithoutProsInput
  update: ProsAndConsUpdateWithoutProsDataInput
  upsert: ProsAndConsUpsertWithoutProsInput
  connect: ProsAndConsWhereUniqueInput
}

input ProsAndConsUpdateWithoutConsDataInput {
  page: PageUpdateOneRequiredWithoutProsAndConsInput
  title: String
  top: Boolean
  order: Int
  pros: ProsUpdateManyWithoutProsAndConsInput
}

input ProsAndConsUpdateWithoutPageDataInput {
  title: String
  top: Boolean
  order: Int
  pros: ProsUpdateManyWithoutProsAndConsInput
  cons: ConsUpdateManyWithoutProsAndConsInput
}

input ProsAndConsUpdateWithoutProsDataInput {
  page: PageUpdateOneRequiredWithoutProsAndConsInput
  title: String
  top: Boolean
  order: Int
  cons: ConsUpdateManyWithoutProsAndConsInput
}

input ProsAndConsUpdateWithWhereUniqueWithoutPageInput {
  where: ProsAndConsWhereUniqueInput!
  data: ProsAndConsUpdateWithoutPageDataInput!
}

input ProsAndConsUpsertWithoutConsInput {
  update: ProsAndConsUpdateWithoutConsDataInput!
  create: ProsAndConsCreateWithoutConsInput!
}

input ProsAndConsUpsertWithoutProsInput {
  update: ProsAndConsUpdateWithoutProsDataInput!
  create: ProsAndConsCreateWithoutProsInput!
}

input ProsAndConsUpsertWithWhereUniqueWithoutPageInput {
  where: ProsAndConsWhereUniqueInput!
  update: ProsAndConsUpdateWithoutPageDataInput!
  create: ProsAndConsCreateWithoutPageInput!
}

input ProsAndConsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  page: PageWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  pros_every: ProsWhereInput
  pros_some: ProsWhereInput
  pros_none: ProsWhereInput
  cons_every: ConsWhereInput
  cons_some: ConsWhereInput
  cons_none: ConsWhereInput
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProsAndConsWhereInput!]
  OR: [ProsAndConsWhereInput!]
  NOT: [ProsAndConsWhereInput!]
}

input ProsAndConsWhereUniqueInput {
  id: ID
}

type ProsConnection {
  pageInfo: PageInfo!
  edges: [ProsEdge]!
  aggregate: AggregatePros!
}

input ProsCreateInput {
  id: ID
  prosAndCons: ProsAndConsCreateOneWithoutProsInput!
  content: String
  order: Int
}

input ProsCreateManyWithoutProsAndConsInput {
  create: [ProsCreateWithoutProsAndConsInput!]
  connect: [ProsWhereUniqueInput!]
}

input ProsCreateWithoutProsAndConsInput {
  id: ID
  content: String
  order: Int
}

type ProsEdge {
  node: Pros!
  cursor: String!
}

enum ProsOrderByInput {
  id_ASC
  id_DESC
  content_ASC
  content_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProsPreviousValues {
  id: ID!
  content: String
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ProsScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProsScalarWhereInput!]
  OR: [ProsScalarWhereInput!]
  NOT: [ProsScalarWhereInput!]
}

type ProsSubscriptionPayload {
  mutation: MutationType!
  node: Pros
  updatedFields: [String!]
  previousValues: ProsPreviousValues
}

input ProsSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProsWhereInput
  AND: [ProsSubscriptionWhereInput!]
  OR: [ProsSubscriptionWhereInput!]
  NOT: [ProsSubscriptionWhereInput!]
}

input ProsUpdateInput {
  prosAndCons: ProsAndConsUpdateOneRequiredWithoutProsInput
  content: String
  order: Int
}

input ProsUpdateManyDataInput {
  content: String
  order: Int
}

input ProsUpdateManyMutationInput {
  content: String
  order: Int
}

input ProsUpdateManyWithoutProsAndConsInput {
  create: [ProsCreateWithoutProsAndConsInput!]
  delete: [ProsWhereUniqueInput!]
  connect: [ProsWhereUniqueInput!]
  set: [ProsWhereUniqueInput!]
  disconnect: [ProsWhereUniqueInput!]
  update: [ProsUpdateWithWhereUniqueWithoutProsAndConsInput!]
  upsert: [ProsUpsertWithWhereUniqueWithoutProsAndConsInput!]
  deleteMany: [ProsScalarWhereInput!]
  updateMany: [ProsUpdateManyWithWhereNestedInput!]
}

input ProsUpdateManyWithWhereNestedInput {
  where: ProsScalarWhereInput!
  data: ProsUpdateManyDataInput!
}

input ProsUpdateWithoutProsAndConsDataInput {
  content: String
  order: Int
}

input ProsUpdateWithWhereUniqueWithoutProsAndConsInput {
  where: ProsWhereUniqueInput!
  data: ProsUpdateWithoutProsAndConsDataInput!
}

input ProsUpsertWithWhereUniqueWithoutProsAndConsInput {
  where: ProsWhereUniqueInput!
  update: ProsUpdateWithoutProsAndConsDataInput!
  create: ProsCreateWithoutProsAndConsInput!
}

input ProsWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  prosAndCons: ProsAndConsWhereInput
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ProsWhereInput!]
  OR: [ProsWhereInput!]
  NOT: [ProsWhereInput!]
}

input ProsWhereUniqueInput {
  id: ID
}

type Query {
  alertBox(where: AlertBoxWhereUniqueInput!): AlertBox
  alertBoxes(where: AlertBoxWhereInput, orderBy: AlertBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AlertBox]!
  alertBoxesConnection(where: AlertBoxWhereInput, orderBy: AlertBoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AlertBoxConnection!
  block(where: BlockWhereUniqueInput!): Block
  blocks(where: BlockWhereInput, orderBy: BlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Block]!
  blocksConnection(where: BlockWhereInput, orderBy: BlockOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BlockConnection!
  box(where: BoxWhereUniqueInput!): Box
  boxes(where: BoxWhereInput, orderBy: BoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Box]!
  boxesConnection(where: BoxWhereInput, orderBy: BoxOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BoxConnection!
  component(where: ComponentWhereUniqueInput!): Component
  components(where: ComponentWhereInput, orderBy: ComponentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Component]!
  componentsConnection(where: ComponentWhereInput, orderBy: ComponentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ComponentConnection!
  cons(where: ConsWhereUniqueInput!): Cons
  conses(where: ConsWhereInput, orderBy: ConsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Cons]!
  consesConnection(where: ConsWhereInput, orderBy: ConsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConsConnection!
  faq(where: FaqWhereUniqueInput!): Faq
  faqs(where: FaqWhereInput, orderBy: FaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Faq]!
  faqsConnection(where: FaqWhereInput, orderBy: FaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FaqConnection!
  faqCategory(where: FaqCategoryWhereUniqueInput!): FaqCategory
  faqCategories(where: FaqCategoryWhereInput, orderBy: FaqCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FaqCategory]!
  faqCategoriesConnection(where: FaqCategoryWhereInput, orderBy: FaqCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FaqCategoryConnection!
  grid(where: GridWhereUniqueInput!): Grid
  grids(where: GridWhereInput, orderBy: GridOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Grid]!
  gridsConnection(where: GridWhereInput, orderBy: GridOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GridConnection!
  gridItem(where: GridItemWhereUniqueInput!): GridItem
  gridItems(where: GridItemWhereInput, orderBy: GridItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [GridItem]!
  gridItemsConnection(where: GridItemWhereInput, orderBy: GridItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GridItemConnection!
  media(where: MediaWhereUniqueInput!): Media
  medias(where: MediaWhereInput, orderBy: MediaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Media]!
  mediasConnection(where: MediaWhereInput, orderBy: MediaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MediaConnection!
  page(where: PageWhereUniqueInput!): Page
  pages(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Page]!
  pagesConnection(where: PageWhereInput, orderBy: PageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PageConnection!
  pageFaq(where: PageFaqWhereUniqueInput!): PageFaq
  pageFaqs(where: PageFaqWhereInput, orderBy: PageFaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PageFaq]!
  pageFaqsConnection(where: PageFaqWhereInput, orderBy: PageFaqOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PageFaqConnection!
  pageFaqAccordion(where: PageFaqAccordionWhereUniqueInput!): PageFaqAccordion
  pageFaqAccordions(where: PageFaqAccordionWhereInput, orderBy: PageFaqAccordionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PageFaqAccordion]!
  pageFaqAccordionsConnection(where: PageFaqAccordionWhereInput, orderBy: PageFaqAccordionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PageFaqAccordionConnection!
  pros(where: ProsWhereUniqueInput!): Pros
  proses(where: ProsWhereInput, orderBy: ProsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Pros]!
  prosesConnection(where: ProsWhereInput, orderBy: ProsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProsConnection!
  prosAndCons(where: ProsAndConsWhereUniqueInput!): ProsAndCons
  prosAndConses(where: ProsAndConsWhereInput, orderBy: ProsAndConsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProsAndCons]!
  prosAndConsesConnection(where: ProsAndConsWhereInput, orderBy: ProsAndConsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProsAndConsConnection!
  quickTip(where: QuickTipWhereUniqueInput!): QuickTip
  quickTips(where: QuickTipWhereInput, orderBy: QuickTipOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [QuickTip]!
  quickTipsConnection(where: QuickTipWhereInput, orderBy: QuickTipOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): QuickTipConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type QuickTip {
  id: ID!
  page: Page!
  title: String
  content: String
  buttonText: String
  buttonLink: String
  media: Media
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type QuickTipConnection {
  pageInfo: PageInfo!
  edges: [QuickTipEdge]!
  aggregate: AggregateQuickTip!
}

input QuickTipCreateInput {
  id: ID
  page: PageCreateOneWithoutQuickTipsInput!
  title: String
  content: String
  buttonText: String
  buttonLink: String
  media: MediaCreateOneInput
  top: Boolean
  order: Int
}

input QuickTipCreateManyWithoutPageInput {
  create: [QuickTipCreateWithoutPageInput!]
  connect: [QuickTipWhereUniqueInput!]
}

input QuickTipCreateWithoutPageInput {
  id: ID
  title: String
  content: String
  buttonText: String
  buttonLink: String
  media: MediaCreateOneInput
  top: Boolean
  order: Int
}

type QuickTipEdge {
  node: QuickTip!
  cursor: String!
}

enum QuickTipOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  buttonText_ASC
  buttonText_DESC
  buttonLink_ASC
  buttonLink_DESC
  top_ASC
  top_DESC
  order_ASC
  order_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type QuickTipPreviousValues {
  id: ID!
  title: String
  content: String
  buttonText: String
  buttonLink: String
  top: Boolean
  order: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

input QuickTipScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  buttonText: String
  buttonText_not: String
  buttonText_in: [String!]
  buttonText_not_in: [String!]
  buttonText_lt: String
  buttonText_lte: String
  buttonText_gt: String
  buttonText_gte: String
  buttonText_contains: String
  buttonText_not_contains: String
  buttonText_starts_with: String
  buttonText_not_starts_with: String
  buttonText_ends_with: String
  buttonText_not_ends_with: String
  buttonLink: String
  buttonLink_not: String
  buttonLink_in: [String!]
  buttonLink_not_in: [String!]
  buttonLink_lt: String
  buttonLink_lte: String
  buttonLink_gt: String
  buttonLink_gte: String
  buttonLink_contains: String
  buttonLink_not_contains: String
  buttonLink_starts_with: String
  buttonLink_not_starts_with: String
  buttonLink_ends_with: String
  buttonLink_not_ends_with: String
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [QuickTipScalarWhereInput!]
  OR: [QuickTipScalarWhereInput!]
  NOT: [QuickTipScalarWhereInput!]
}

type QuickTipSubscriptionPayload {
  mutation: MutationType!
  node: QuickTip
  updatedFields: [String!]
  previousValues: QuickTipPreviousValues
}

input QuickTipSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: QuickTipWhereInput
  AND: [QuickTipSubscriptionWhereInput!]
  OR: [QuickTipSubscriptionWhereInput!]
  NOT: [QuickTipSubscriptionWhereInput!]
}

input QuickTipUpdateInput {
  page: PageUpdateOneRequiredWithoutQuickTipsInput
  title: String
  content: String
  buttonText: String
  buttonLink: String
  media: MediaUpdateOneInput
  top: Boolean
  order: Int
}

input QuickTipUpdateManyDataInput {
  title: String
  content: String
  buttonText: String
  buttonLink: String
  top: Boolean
  order: Int
}

input QuickTipUpdateManyMutationInput {
  title: String
  content: String
  buttonText: String
  buttonLink: String
  top: Boolean
  order: Int
}

input QuickTipUpdateManyWithoutPageInput {
  create: [QuickTipCreateWithoutPageInput!]
  delete: [QuickTipWhereUniqueInput!]
  connect: [QuickTipWhereUniqueInput!]
  set: [QuickTipWhereUniqueInput!]
  disconnect: [QuickTipWhereUniqueInput!]
  update: [QuickTipUpdateWithWhereUniqueWithoutPageInput!]
  upsert: [QuickTipUpsertWithWhereUniqueWithoutPageInput!]
  deleteMany: [QuickTipScalarWhereInput!]
  updateMany: [QuickTipUpdateManyWithWhereNestedInput!]
}

input QuickTipUpdateManyWithWhereNestedInput {
  where: QuickTipScalarWhereInput!
  data: QuickTipUpdateManyDataInput!
}

input QuickTipUpdateWithoutPageDataInput {
  title: String
  content: String
  buttonText: String
  buttonLink: String
  media: MediaUpdateOneInput
  top: Boolean
  order: Int
}

input QuickTipUpdateWithWhereUniqueWithoutPageInput {
  where: QuickTipWhereUniqueInput!
  data: QuickTipUpdateWithoutPageDataInput!
}

input QuickTipUpsertWithWhereUniqueWithoutPageInput {
  where: QuickTipWhereUniqueInput!
  update: QuickTipUpdateWithoutPageDataInput!
  create: QuickTipCreateWithoutPageInput!
}

input QuickTipWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  page: PageWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  content: String
  content_not: String
  content_in: [String!]
  content_not_in: [String!]
  content_lt: String
  content_lte: String
  content_gt: String
  content_gte: String
  content_contains: String
  content_not_contains: String
  content_starts_with: String
  content_not_starts_with: String
  content_ends_with: String
  content_not_ends_with: String
  buttonText: String
  buttonText_not: String
  buttonText_in: [String!]
  buttonText_not_in: [String!]
  buttonText_lt: String
  buttonText_lte: String
  buttonText_gt: String
  buttonText_gte: String
  buttonText_contains: String
  buttonText_not_contains: String
  buttonText_starts_with: String
  buttonText_not_starts_with: String
  buttonText_ends_with: String
  buttonText_not_ends_with: String
  buttonLink: String
  buttonLink_not: String
  buttonLink_in: [String!]
  buttonLink_not_in: [String!]
  buttonLink_lt: String
  buttonLink_lte: String
  buttonLink_gt: String
  buttonLink_gte: String
  buttonLink_contains: String
  buttonLink_not_contains: String
  buttonLink_starts_with: String
  buttonLink_not_starts_with: String
  buttonLink_ends_with: String
  buttonLink_not_ends_with: String
  media: MediaWhereInput
  top: Boolean
  top_not: Boolean
  order: Int
  order_not: Int
  order_in: [Int!]
  order_not_in: [Int!]
  order_lt: Int
  order_lte: Int
  order_gt: Int
  order_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [QuickTipWhereInput!]
  OR: [QuickTipWhereInput!]
  NOT: [QuickTipWhereInput!]
}

input QuickTipWhereUniqueInput {
  id: ID
}

type Subscription {
  alertBox(where: AlertBoxSubscriptionWhereInput): AlertBoxSubscriptionPayload
  block(where: BlockSubscriptionWhereInput): BlockSubscriptionPayload
  box(where: BoxSubscriptionWhereInput): BoxSubscriptionPayload
  component(where: ComponentSubscriptionWhereInput): ComponentSubscriptionPayload
  cons(where: ConsSubscriptionWhereInput): ConsSubscriptionPayload
  faq(where: FaqSubscriptionWhereInput): FaqSubscriptionPayload
  faqCategory(where: FaqCategorySubscriptionWhereInput): FaqCategorySubscriptionPayload
  grid(where: GridSubscriptionWhereInput): GridSubscriptionPayload
  gridItem(where: GridItemSubscriptionWhereInput): GridItemSubscriptionPayload
  media(where: MediaSubscriptionWhereInput): MediaSubscriptionPayload
  page(where: PageSubscriptionWhereInput): PageSubscriptionPayload
  pageFaq(where: PageFaqSubscriptionWhereInput): PageFaqSubscriptionPayload
  pageFaqAccordion(where: PageFaqAccordionSubscriptionWhereInput): PageFaqAccordionSubscriptionPayload
  pros(where: ProsSubscriptionWhereInput): ProsSubscriptionPayload
  prosAndCons(where: ProsAndConsSubscriptionWhereInput): ProsAndConsSubscriptionPayload
  quickTip(where: QuickTipSubscriptionWhereInput): QuickTipSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserCreatepermissionsInput
}

input UserCreateManyInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreatepermissionsInput {
  set: [Permission!]
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UserScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  resetTokenExpiry: Float
  resetTokenExpiry_not: Float
  resetTokenExpiry_in: [Float!]
  resetTokenExpiry_not_in: [Float!]
  resetTokenExpiry_lt: Float
  resetTokenExpiry_lte: Float
  resetTokenExpiry_gt: Float
  resetTokenExpiry_gte: Float
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyDataInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyInput {
  create: [UserCreateInput!]
  update: [UserUpdateWithWhereUniqueNestedInput!]
  upsert: [UserUpsertWithWhereUniqueNestedInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  password: String
  resetToken: String
  resetTokenExpiry: Float
  permissions: UserUpdatepermissionsInput
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdatepermissionsInput {
  set: [Permission!]
}

input UserUpdateWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  data: UserUpdateDataInput!
}

input UserUpsertWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  resetToken: String
  resetToken_not: String
  resetToken_in: [String!]
  resetToken_not_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_contains: String
  resetToken_not_contains: String
  resetToken_starts_with: String
  resetToken_not_starts_with: String
  resetToken_ends_with: String
  resetToken_not_ends_with: String
  resetTokenExpiry: Float
  resetTokenExpiry_not: Float
  resetTokenExpiry_in: [Float!]
  resetTokenExpiry_not_in: [Float!]
  resetTokenExpiry_lt: Float
  resetTokenExpiry_lte: Float
  resetTokenExpiry_gt: Float
  resetTokenExpiry_gte: Float
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
