# import * from './generated/prisma.graphql'

type Query {
  me: User
  users: [User]!
  pages(first: Int, skip: Int, filter: PageFilterInput): PageResponse
  page(id: ID): Page
  mediaFiles: [Media]
  mediaFile(id: ID): Media
  faqs(first: Int, skip: Int, filter: FaqFilterInput): FaqResponse
  faq(id: ID): Faq
  searchFaq(searchString: String): [Faq]
  faqCategories(
    first: Int
    skip: Int
    filter: FaqCategoryFilterInput
  ): FaqCategoryResponse
  faqCategory(id: ID): FaqCategory
  grids: [Grid]
  grid(id: ID): Grid
  generatePageUrl(slug: String!, type: PageType!, vertical: String!): PageUrl!
}

input PageFilterInput {
  title: String
  type: String
  slug: String
  status: String
  vertical: String
}

input FaqCategoryFilterInput {
  name: String
  slug: String
  description: String
}

input FaqFilterInput {
  title: String
  short_description: String
  slug: String
  vertical: String
}

type PageResponse {
  items: [Page]
  meta: Meta
}

type FaqResponse {
  items: [Faq]
  meta: Meta
}

type FaqCategoryResponse {
  items: [FaqCategory]
  meta: Meta
}

type Meta {
  total_count: Int
  hit_count: Int
}

input ProConInput {
  id: ID
  content: String
  order: Int
}

input ProsAndConsInput {
  id: ID
  title: String
  pros: [ProConInput]
  cons: [ProConInput]
  order: Int
}

input SectionsOrder {
  id: ID!
  type: String!
  order: Int!
}

input GridItemInput {
  id: ID!
  title: String
  grid: ID
  content: String
  linkText: String
  linkUrl: String
  media: ID
}

type Mutation {
  signup(email: String!, password: String!, name: String!): User!
  login(email: String!, password: String!): User!
  logout: SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  upsertPage(
    id: ID!
    media: ID
    title: String!
    slug: String!
    url: String!
    content: String
    type: PageType!
    vertical: String
    template: String
    status: PageStatus!
  ): Page!
  upsertBlock(
    id: ID!
    page: ID!
    media: ID
    title: String!
    video: String
    alignment: String
    content: String
    top: Boolean
    order: Int
  ): Block
  deleteBlock(id: ID!): Block
  upsertBox(
    id: ID!
    page: ID!
    media: ID
    title: String!
    video: String
    style: String
    alignment: String
    content: String
    top: Boolean
    order: Int
  ): Box
  deleteBox(id: ID!): Box
  upsertAlertBox(
    id: ID!
    page: ID!
    title: String!
    content: String
    prefix: String
    style: String
    top: Boolean
    order: Int
  ): AlertBox
  deleteAlertBox(id: ID!): AlertBox
  upsertQuickTip(
    id: ID!
    page: ID!
    media: ID
    title: String!
    content: String
    buttonText: String
    buttonLink: String
    top: Boolean
    order: Int
  ): QuickTip
  deleteQuickTip(id: ID!): QuickTip
  upsertProsAndCons(
    id: ID!
    page: ID!
    title: String
    pros: [ProConInput]
    cons: [ProConInput]
    top: Boolean
    order: Int
  ): ProsAndCons
  deleteProsAndCons(id: ID!): ProsAndCons
  updateSectionsOrder(sectionsOrder: [SectionsOrder]): Block

  updateMedia(id: ID!, title: String, altText: String): Media

  upsertPageFaq(id: ID!, order: Int, page: ID!, faq: ID!): PageFaq

  deletePageFaq(id: ID!): PageFaq

  upsertPageFaqAccordion(
    id: ID!
    order: Int
    page: ID!
    faqCategory: ID!
  ): PageFaqAccordion

  deletePageFaqAccordion(id: ID!): PageFaqAccordion

  addFaq(
    title: String!
    description: String
    short_description: String
    slug: String
    vertical: String
    category: [ID]
    authors: [ID!]!
    readingTime: Int
    order: Int
    variant: [String]
    tag: [String]
  ): Faq!

  updateFaq(
    id: ID!
    title: String!
    description: String
    short_description: String
    slug: String
    vertical: String
    category: [ID]
    authors: [ID!]!
    readingTime: Int
    order: Int
    variant: [String]
    tag: [String]
  ): Faq!

  deleteFaq(id: ID!): Faq!

  addFaqCategory(
    name: String!
    slug: String
    description: String
    faqs: [ID]
  ): FaqCategory!

  updateFaqCategory(
    id: ID!
    name: String!
    slug: String
    description: String
    faqs: [ID]
  ): FaqCategory!

  deleteFaqCategory(id: ID!): FaqCategory!

  upsertGrid(
    id: ID!
    title: String
    content: String
    page: ID!
    order: Int
    media: ID
    items: [GridItemInput]
  ): Grid
  deleteGrid(id: ID!): Grid
  reingestPages: ReingestPagesResponse!
  migrateRcPages: ReingestPagesResponse!
}

type ReingestPagesResponse {
  status: Boolean
}

type PageUrl {
  url: String
}

type SuccessMessage {
  message: String
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  permissions: [Permission!]!
}

type Media {
  id: ID!
  url: String!
  title: String
  altText: String
}
