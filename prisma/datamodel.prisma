enum Permission {
  ADMIN
  USER
}

enum PageType {
  PAGE
  NEWS
  ARTICLE
}

enum PageStatus {
  DRAFT
  PUBLISHED
  DELETED
}

type User {
  id: ID! @id
  name: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission] @scalarList(strategy: RELATION)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Page {
  id: ID! @id
  title: String!
  slug: String!
  type: PageType!
  status: PageStatus!
  vertical: String
  media: Media
  blocks: [Block]!
  boxes: [Box]!
  prosAndCons: [ProsAndCons]!
  alertBoxes: [AlertBox]!
  quickTips: [QuickTip]
  faqs: [PageFaq]
  faqAccordion: [PageFaqAccordion]
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Block {
  id: ID! @id
  page: Page!
  title: String
  media: Media
  video: String
  style: String
  content: String
  order: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Box {
  id: ID! @id
  page: Page!
  title: String
  media: Media
  video: String
  style: String
  content: String
  order: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type AlertBox {
  id: ID! @id
  page: Page!
  title: String
  content: String
  prefix: String
  style: String
  order: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type QuickTip {
  id: ID! @id
  page: Page!
  title: String
  content: String
  buttonText: String
  buttonLink: String
  media: Media
  order: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ProsAndCons {
  id: ID! @id
  page: Page!
  title: String
  order: Int
  pros: [Pros]! @relation(name: "ProsOnProsAndCons", onDelete: CASCADE)
  cons: [Cons]! @relation(name: "ConsOnProsAndCons", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Pros {
  id: ID! @id
  prosAndCons: ProsAndCons!
    @relation(name: "ProsOnProsAndCons", onDelete: SET_NULL)
  content: String
  order: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Cons {
  id: ID! @id
  prosAndCons: ProsAndCons!
    @relation(name: "ConsOnProsAndCons", onDelete: SET_NULL)
  content: String
  order: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Faq {
  id: ID! @id
  title: String!
  description: String
  short_description: String
  authors: [User!]!
  slug: String!
  vertical: String
  category: [FaqCategory!]!
  readingTime: Int
  order: Int
  variant: [String] @scalarList(strategy: RELATION)
  tag: [String] @scalarList(strategy: RELATION)
  pubDate: DateTime
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type FaqCategory {
  id: ID! @id
  name: String!
  slug: String!
  description: String!
  faqs: [Faq!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Media {
  id: ID! @id
  url: String!
  title: String
  altText: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type PageFaq {
  id: ID! @id
  order: Int
  page: Page!
  faq: Faq!
}

type PageFaqAccordion {
  id: ID! @id
  order: Int
  page: Page!
  faqCategory: FaqCategory!
}
